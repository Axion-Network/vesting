{
  "manifestVersion": "3.1",
  "impls": {
    "1b15c17bf8674701e8a426212d427302b594112fdbb83d91ea3491f0aa37e63b": {
      "address": "0x76E2B6765B1101383FB2fAFeEd97Bff489300F83",
      "txHash": "0x978d8107c17de4862142c13dface14deebfee7a6d3e8ed88771ec7e277027c31",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "AuctionV2",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)16550_storage)",
            "src": "contracts/archive/v2/AuctionV2.sol:78"
          },
          {
            "contract": "AuctionV2",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/archive/v2/AuctionV2.sol:79"
          },
          {
            "contract": "AuctionV2",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)16557_storage))",
            "src": "contracts/archive/v2/AuctionV2.sol:80"
          },
          {
            "contract": "AuctionV2",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/archive/v2/AuctionV2.sol:81"
          },
          {
            "contract": "AuctionV2",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionV2.sol:84"
          },
          {
            "contract": "AuctionV2",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionV2.sol:85"
          },
          {
            "contract": "AuctionV2",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionV2.sol:86"
          },
          {
            "contract": "AuctionV2",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionV2.sol:87"
          },
          {
            "contract": "AuctionV2",
            "label": "options",
            "type": "t_struct(Options)16579_storage",
            "src": "contracts/archive/v2/AuctionV2.sol:89"
          },
          {
            "contract": "AuctionV2",
            "label": "addresses",
            "type": "t_struct(Addresses)16566_storage",
            "src": "contracts/archive/v2/AuctionV2.sol:90"
          },
          {
            "contract": "AuctionV2",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)22674",
            "src": "contracts/archive/v2/AuctionV2.sol:91"
          },
          {
            "contract": "AuctionV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/archive/v2/AuctionV2.sol:93"
          },
          {
            "contract": "AuctionV2",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/archive/v2/AuctionV2.sol:95"
          },
          {
            "contract": "AuctionV2",
            "label": "middlePriceDays",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionV2.sol:97"
          },
          {
            "contract": "AuctionV2",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)16659_storage)7_storage",
            "src": "contracts/archive/v2/AuctionV2.sol:109"
          },
          {
            "contract": "AuctionV2",
            "label": "ventureAutoStakeDays",
            "type": "t_uint8",
            "src": "contracts/archive/v2/AuctionV2.sol:110"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)16550_storage)": {
            "label": "mapping(uint256 => struct AuctionV2.AuctionReserves)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AuctionReserves)16550_storage": {
            "label": "struct AuctionV2.AuctionReserves",
            "members": [
              {
                "label": "eth",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_uint256"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint256"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)16557_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionV2.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)16557_storage)": {
            "label": "mapping(address => struct AuctionV2.UserBid)"
          },
          "t_struct(UserBid)16557_storage": {
            "label": "struct AuctionV2.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint256"
              },
              {
                "label": "ref",
                "type": "t_address"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(Options)16579_storage": {
            "label": "struct AuctionV2.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint256"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint256"
              },
              {
                "label": "referredPercent",
                "type": "t_uint256"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              },
              {
                "label": "discountPercent",
                "type": "t_uint256"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(Addresses)16566_storage": {
            "label": "struct AuctionV2.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "staking",
                "type": "t_address"
              },
              {
                "label": "uniswap",
                "type": "t_address_payable"
              },
              {
                "label": "recipient",
                "type": "t_address_payable"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_contract(IAuctionV1)22674": {
            "label": "contract IAuctionV1"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(AuctionData)16659_storage)7_storage": {
            "label": "struct AuctionV2.AuctionData[7]"
          },
          "t_struct(AuctionData)16659_storage": {
            "label": "struct AuctionV2.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)16652_storage)dyn_storage"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_struct(VentureToken)16652_storage)dyn_storage": {
            "label": "struct AuctionV2.VentureToken[]"
          },
          "t_struct(VentureToken)16652_storage": {
            "label": "struct AuctionV2.VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8538c878904aca2c6e4236a92a6f39db8ade79e002afe4219c5f040c792c51a6": {
      "address": "0x5c785E7DCe009c5b7477cA9fe10Ff0726dd61660",
      "txHash": "0xdb5f20ead3ffd3de6222214fdb789f0493049ac447b3ca6a2912fde41f912adb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "TokenV2",
            "label": "swapToken",
            "type": "t_contract(IERC20)5077",
            "src": "contracts/archive/v2/TokenV2.sol:24"
          },
          {
            "contract": "TokenV2",
            "label": "swapIsOver",
            "type": "t_bool",
            "src": "contracts/archive/v2/TokenV2.sol:25"
          },
          {
            "contract": "TokenV2",
            "label": "swapTokenBalance",
            "type": "t_uint256",
            "src": "contracts/archive/v2/TokenV2.sol:26"
          },
          {
            "contract": "TokenV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/archive/v2/TokenV2.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)5077": {
            "label": "contract IERC20"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "30acefa1a95ff6bf55e8373bd63f6df9f553b2c97b975e802bd74e04321883b5": {
      "address": "0x02705d62bF690d7B90713F7EF4B8452A478Ea1BC",
      "txHash": "0x02acb5454283a85e8035e09fa0b9aa3d7093969eeb03154d28612ad93c1017b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "NativeSwapV2",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/archive/v2/NativeSwapV2.sol:29"
          },
          {
            "contract": "NativeSwapV2",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/archive/v2/NativeSwapV2.sol:30"
          },
          {
            "contract": "NativeSwapV2",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/archive/v2/NativeSwapV2.sol:31"
          },
          {
            "contract": "NativeSwapV2",
            "label": "swapToken",
            "type": "t_contract(IERC20)5077",
            "src": "contracts/archive/v2/NativeSwapV2.sol:33"
          },
          {
            "contract": "NativeSwapV2",
            "label": "mainToken",
            "type": "t_contract(ITokenV2)22816",
            "src": "contracts/archive/v2/NativeSwapV2.sol:34"
          },
          {
            "contract": "NativeSwapV2",
            "label": "auction",
            "type": "t_contract(IAuctionV2)22696",
            "src": "contracts/archive/v2/NativeSwapV2.sol:35"
          },
          {
            "contract": "NativeSwapV2",
            "label": "swapTokenBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/archive/v2/NativeSwapV2.sol:37"
          },
          {
            "contract": "NativeSwapV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/archive/v2/NativeSwapV2.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20)5077": {
            "label": "contract IERC20"
          },
          "t_contract(ITokenV2)22816": {
            "label": "contract ITokenV2"
          },
          "t_contract(IAuctionV2)22696": {
            "label": "contract IAuctionV2"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3c11ec3895023005cebea5275b9684829b1accce420af6c337b838ceb8072c77": {
      "address": "0x0b4Bf94141c58d3c11E702A4692A4b537deaabCf",
      "txHash": "0xe29cb72ca594b667ad60510717b04b28662443d15cb4a3fc6a25051ae2365b96",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakingV2",
            "label": "addresses",
            "type": "t_struct(Addresses)19581_storage",
            "src": "contracts/archive/v2/StakingV2.sol:96"
          },
          {
            "contract": "StakingV2",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)22768",
            "src": "contracts/archive/v2/StakingV2.sol:97"
          },
          {
            "contract": "StakingV2",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:105"
          },
          {
            "contract": "StakingV2",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:106"
          },
          {
            "contract": "StakingV2",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:107"
          },
          {
            "contract": "StakingV2",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:108"
          },
          {
            "contract": "StakingV2",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:109"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:110"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:111"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:112"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:113"
          },
          {
            "contract": "StakingV2",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)19574_storage))",
            "src": "contracts/archive/v2/StakingV2.sol:117"
          },
          {
            "contract": "StakingV2",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/archive/v2/StakingV2.sol:119"
          },
          {
            "contract": "StakingV2",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)19557_storage)dyn_storage",
            "src": "contracts/archive/v2/StakingV2.sol:121"
          },
          {
            "contract": "StakingV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/archive/v2/StakingV2.sol:124"
          },
          {
            "contract": "StakingV2",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:126"
          },
          {
            "contract": "StakingV2",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:127"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts/archive/v2/StakingV2.sol:129"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts/archive/v2/StakingV2.sol:131"
          },
          {
            "contract": "StakingV2",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:132"
          },
          {
            "contract": "StakingV2",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:134"
          },
          {
            "contract": "StakingV2",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/archive/v2/StakingV2.sol:136"
          },
          {
            "contract": "StakingV2",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts/archive/v2/StakingV2.sol:137"
          },
          {
            "contract": "StakingV2",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/archive/v2/StakingV2.sol:140"
          },
          {
            "contract": "StakingV2",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/archive/v2/StakingV2.sol:142"
          },
          {
            "contract": "StakingV2",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/archive/v2/StakingV2.sol:144"
          },
          {
            "contract": "StakingV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/archive/v2/StakingV2.sol:146"
          },
          {
            "contract": "StakingV2",
            "label": "bpd",
            "type": "t_struct(BPDPool)19590_storage",
            "src": "contracts/archive/v2/StakingV2.sol:149"
          },
          {
            "contract": "StakingV2",
            "label": "bpd128",
            "type": "t_struct(BPDPool128)19599_storage",
            "src": "contracts/archive/v2/StakingV2.sol:150"
          }
        ],
        "types": {
          "t_struct(Addresses)19581_storage": {
            "label": "struct StakingV2.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "subBalances",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IStakingV1)22768": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)19574_storage))": {
            "label": "mapping(address => mapping(uint256 => struct StakingV2.Session))"
          },
          "t_mapping(t_uint256,t_struct(Session)19574_storage)": {
            "label": "mapping(uint256 => struct StakingV2.Session)"
          },
          "t_struct(Session)19574_storage": {
            "label": "struct StakingV2.Session",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "firstPayout",
                "type": "t_uint256"
              },
              {
                "label": "lastPayout",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "payout",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_struct(Payout)19557_storage)dyn_storage": {
            "label": "struct StakingV2.Payout[]"
          },
          "t_struct(Payout)19557_storage": {
            "label": "struct StakingV2.Payout",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_struct(BPDPool)19590_storage": {
            "label": "struct StakingV2.BPDPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint96)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint96)5_storage"
              }
            ]
          },
          "t_array(t_uint96)5_storage": {
            "label": "uint96[5]"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(BPDPool128)19599_storage": {
            "label": "struct StakingV2.BPDPool128",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eecfa1c12ba7f206a43db06c2005562ee0edeb9f8fc462661ff02d7b5d8b34bf": {
      "address": "0x1c3Ec30B5E78B91310c1F35E62Ef7C757d3fdd00",
      "txHash": "0x2217dbfc01be1bb7684f642d29e8955c80a53d87e6b12773a1061dc3035110e6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "DataReaderV2",
            "label": "staking",
            "type": "t_contract(IStakingDataV2)22740",
            "src": "contracts/archive/v2/DataReaderV2.sol:41"
          },
          {
            "contract": "DataReaderV2",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)22768",
            "src": "contracts/archive/v2/DataReaderV2.sol:42"
          },
          {
            "contract": "DataReaderV2",
            "label": "auction",
            "type": "t_contract(IAuctionDataV2)22649",
            "src": "contracts/archive/v2/DataReaderV2.sol:43"
          },
          {
            "contract": "DataReaderV2",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)22674",
            "src": "contracts/archive/v2/DataReaderV2.sol:44"
          }
        ],
        "types": {
          "t_contract(IStakingDataV2)22740": {
            "label": "contract IStakingDataV2"
          },
          "t_contract(IStakingV1)22768": {
            "label": "contract IStakingV1"
          },
          "t_contract(IAuctionDataV2)22649": {
            "label": "contract IAuctionDataV2"
          },
          "t_contract(IAuctionV1)22674": {
            "label": "contract IAuctionV1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6d742b5f68bae8d5febd92fc10c3ba070a7c7c0fcae700f2a6354b2c79323c61": {
      "address": "0x044B334D875A4C65c7dA94BaF0829B904613cd56",
      "txHash": "0x10132a6b56bf4c7ca6bb618ebd505bc0802e4a40c9b858f4ef16b85e9dabd956",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "AuctionManagerV2",
            "label": "mintedBPD",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionManagerV2.sol:44"
          },
          {
            "contract": "AuctionManagerV2",
            "label": "mintedAuction",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionManagerV2.sol:45"
          },
          {
            "contract": "AuctionManagerV2",
            "label": "addresses",
            "type": "t_struct(Addresses)16294_storage",
            "src": "contracts/archive/v2/AuctionManagerV2.sol:46"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Addresses)16294_storage": {
            "label": "struct AuctionManagerV2.Addresses",
            "members": [
              {
                "label": "axion",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "bpd",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0cf4ad7bf2c47c4c24056cdf9d81c0679e5b0f0271d708355b9b049685f82be1": {
      "address": "0x7793EBDCCd496aE04BA04cFc2CF6852F15228609",
      "txHash": "0x74fa543374166cb031db5e1e1964f6ade676ee0c61803d7571c0bb6a93177e4f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23823_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "config",
            "type": "t_struct(Config)23793_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23814_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23807_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23798_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)23925_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23823_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Config)23793_storage": {
            "label": "struct StakeBase.Config",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23814_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24191"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24229"
              }
            ]
          },
          "t_contract(IToken)24191": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24229": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23807_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23798_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)23925_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)23925_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)23909"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)23909": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8bf5030910d6e870208ecd9aa7a0ff81d38625ede29aa0ba3c32eb61087e5de3": {
      "address": "0xc5Cc116f8DDd2cE3B873b1cfF8A82D32cb51c3fe",
      "txHash": "0xc5f50c113c97e29f1dd026ab0055c30aa3d268056fe0b21cf71074b95fea5c77",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeMinter",
            "label": "settings",
            "type": "t_struct(Settings)28476_storage",
            "src": "contracts\\stake\\StakeMinter.sol:32"
          },
          {
            "contract": "StakeMinter",
            "label": "contracts",
            "type": "t_struct(Contracts)28495_storage",
            "src": "contracts\\stake\\StakeMinter.sol:33"
          }
        ],
        "types": {
          "t_struct(Settings)28476_storage": {
            "label": "struct StakeMinter.Settings",
            "members": [
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)28495_storage": {
            "label": "struct StakeMinter.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24411"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24449"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24391"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24328"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24300"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24261"
              }
            ]
          },
          "t_contract(IToken)24411": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24449": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakingV2)24391": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakingV1)24328": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakeToken)24300": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24261": {
            "label": "contract IStakeManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7d1ef9a0e9e131db9a875d940f6c1077a773ca50ae3207dce5bd5e56d43a24aa": {
      "address": "0x8a56C6B47838243a3551550f696528BBc15f599F",
      "txHash": "0x3b8bda610d4ccd9aad177738de4b4e5bcb6160ef23fad3e4327581a37e483f6b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/abstracts/Pausable.sol:19"
          },
          {
            "contract": "StakeReminter",
            "label": "contracts",
            "type": "t_struct(Contracts)28747_storage",
            "src": "contracts/stake/StakeReminter.sol:25"
          }
        ],
        "types": {
          "t_struct(Contracts)28747_storage": {
            "label": "struct StakeReminter.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24191"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24041"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24080"
              },
              {
                "label": "stakeBurner",
                "type": "t_contract(IStakeBurner)23904"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24053"
              }
            ]
          },
          "t_contract(IToken)24191": {
            "label": "contract IToken"
          },
          "t_contract(IStakeManager)24041": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeToken)24080": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeBurner)23904": {
            "label": "contract IStakeBurner"
          },
          "t_contract(IStakeMinter)24053": {
            "label": "contract IStakeMinter"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "74556cdcdc4fc638fdca08eb04697186dd9df2c533248c1ddd638b2317546b46": {
      "address": "0xD8CC0C07830f772C69AFb09B246539450EDb7Ce8",
      "txHash": "0x27628a67851b284a90ed215364200a04428306ccb6b7ee367ce001926ca15624",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/abstracts/Pausable.sol:19"
          },
          {
            "contract": "StakeUpgrader",
            "label": "settings",
            "type": "t_struct(Settings)29304_storage",
            "src": "contracts/stake/StakeUpgrader.sol:29"
          },
          {
            "contract": "StakeUpgrader",
            "label": "contracts",
            "type": "t_struct(Contracts)29317_storage",
            "src": "contracts/stake/StakeUpgrader.sol:30"
          }
        ],
        "types": {
          "t_struct(Settings)29304_storage": {
            "label": "struct StakeUpgrader.Settings",
            "members": [
              {
                "label": "maxShareEventActive",
                "type": "t_bool"
              },
              {
                "label": "maxShareMaxDays",
                "type": "t_uint16"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)29317_storage": {
            "label": "struct StakeUpgrader.Contracts",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24080"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24041"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24171"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24108"
              }
            ]
          },
          "t_contract(IStakeToken)24080": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24041": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakingV2)24171": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakingV1)24108": {
            "label": "contract IStakingV1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6a617763e9376bb227bf5715185be69982b4728268ad13386eb7e26e6077156a": {
      "address": "0x0f2D16362277c61DC3fa593D1e557c97C0867bf5",
      "txHash": "0x9f84dfbd239ed6acf5096bef2d936dc779eb266a9bbb989f5b0dfed679a60456",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/abstracts/Pausable.sol:19"
          },
          {
            "contract": "StakeBurner",
            "label": "settings",
            "type": "t_struct(Settings)25453_storage",
            "src": "contracts/stake/StakeBurner.sol:35"
          },
          {
            "contract": "StakeBurner",
            "label": "contracts",
            "type": "t_struct(Contracts)25472_storage",
            "src": "contracts/stake/StakeBurner.sol:36"
          }
        ],
        "types": {
          "t_struct(Settings)25453_storage": {
            "label": "struct StakeBurner.Settings",
            "members": [
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)25472_storage": {
            "label": "struct StakeBurner.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24191"
              },
              {
                "label": "auction",
                "type": "t_contract(IAuction)23832"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24080"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24041"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24108"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24171"
              }
            ]
          },
          "t_contract(IToken)24191": {
            "label": "contract IToken"
          },
          "t_contract(IAuction)23832": {
            "label": "contract IAuction"
          },
          "t_contract(IStakeToken)24080": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24041": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakingV1)24108": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV2)24171": {
            "label": "contract IStakingV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "15eea60ff49fdd2680182fb20ee315c710cbd017b90965bf68f6a2aa48801393": {
      "address": "0x22C4571444C670cD8fda6a514D98EEc55f94617c",
      "txHash": "0xf766d81161ea5081888a78191a5ca94a24163056bd6f9a829a794e39fc47086d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/abstracts/Pausable.sol:19"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:384"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "contract": "StakeToken",
            "label": "contracts",
            "type": "t_struct(Contracts)29007_storage",
            "src": "contracts/stake/StakeToken.sol:30"
          }
        ],
        "types": {
          "t_struct(Contracts)29007_storage": {
            "label": "struct StakeToken.Contracts",
            "members": [
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24229"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24041"
              }
            ]
          },
          "t_contract(IVCAuction)24229": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeManager)24041": {
            "label": "contract IStakeManager"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1ffcf91063d16a3233968292dc99bc4cbac38c029eeed26efc2ea63f4dae8266": {
      "address": "0x5C096e2b955dCa5D0A16BD9a05b5FBe5d7c45511",
      "txHash": "0x0e7e533823342d025998282c92df95bc036f930542b3b3cac08b5ab6edd9cb01",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)23652_storage)",
            "src": "contracts/Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)23612_storage)",
            "src": "contracts/Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts/Auction.sol:28"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)23617_storage))",
            "src": "contracts/Auction.sol:29"
          },
          {
            "contract": "Auction",
            "label": "config",
            "type": "t_struct(Config)23661_storage",
            "src": "contracts/Auction.sol:31"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)23635_storage",
            "src": "contracts/Auction.sol:32"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)23630_storage",
            "src": "contracts/Auction.sol:33"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)23678_storage)7_storage",
            "src": "contracts/Auction.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)23652_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)23652_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "ventureAutoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)23612_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)23612_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)23617_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)23617_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)23617_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Config)23661_storage": {
            "label": "struct AuctionBase.Config",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)23635_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "stakeManager",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)23630_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)23881"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24229"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24053"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)23881": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)24229": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)24053": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)23678_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)23678_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)23666_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)23652_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)23666_storage)dyn_storage": {
            "label": "struct AuctionBase.VentureToken[]"
          },
          "t_struct(VentureToken)23666_storage": {
            "label": "struct AuctionBase.VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "50908cd79de8f689335556760b437ace8404c0021a31ffaf15a59c8700b2838e": {
      "address": "0x3F165b7dFd71Bd92476b23600d685De1065667Ca",
      "txHash": "0x4ceb8825572873a988741f9fae33b97ff694fd8e793733789e7f2e80a8027c71",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "VCAuction",
            "label": "contracts",
            "type": "t_struct(Contracts)10298_storage",
            "src": "contracts/VCAuction.sol:40"
          },
          {
            "contract": "VCAuction",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts/VCAuction.sol:41"
          },
          {
            "contract": "VCAuction",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/VCAuction.sol:43"
          },
          {
            "contract": "VCAuction",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VCAuction.sol:44"
          },
          {
            "contract": "VCAuction",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VCAuction.sol:45"
          },
          {
            "contract": "VCAuction",
            "label": "originWithdrawableTokenAmounts",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VCAuction.sol:46"
          },
          {
            "contract": "VCAuction",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int256))",
            "src": "contracts/VCAuction.sol:48"
          }
        ],
        "types": {
          "t_struct(Contracts)10298_storage": {
            "label": "struct VCAuction.Contracts",
            "members": [
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24108"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24171"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24041"
              }
            ]
          },
          "t_contract(IStakingV1)24108": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV2)24171": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakeManager)24041": {
            "label": "contract IStakeManager"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int256))": {
            "label": "mapping(address => mapping(address => int256))"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b8c02c2f1b9f213deeab1e6e42906995ceb6b37e597cff4ff18442afb9ae5c44": {
      "address": "0xcA4ef1a3A230B1f51d8bC55D7550CdF85c830762",
      "txHash": "0xc4e6f8364455c3611c7c5d6ca61b1ee52165ee37ba372ce37be4adcf62c23933",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23821_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23791_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23812_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23805_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23796_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)23923_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23821_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23791_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23812_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24189"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24227"
              }
            ]
          },
          "t_contract(IToken)24189": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24227": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23805_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23796_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)23923_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)23923_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)23907"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)23907": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4cf257ab069523e9e5af97d425344f0279101b5efe2f7e6d04e4045af5efba3f": {
      "address": "0xA59A21161BAfDbaaD92707c782d8A0e20aa1B49b",
      "txHash": "0x2b865df71c54a49dcf552aa983e4172e8335c53268f1f3db6158569b49f5b7a6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)23802_storage)",
            "src": "contracts/Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)23767_storage)",
            "src": "contracts/Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts/Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)23772_storage))",
            "src": "contracts/Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)23814_storage",
            "src": "contracts/Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)23805_storage",
            "src": "contracts/Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)23785_storage",
            "src": "contracts/Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)23826_storage)7_storage",
            "src": "contracts/Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)23802_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)23802_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "ventureAutoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)23767_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)23767_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)23772_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)23772_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)23772_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)23814_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)23805_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)23785_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)24041"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24389"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24213"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)24041": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)24389": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)24213": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)23826_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)23826_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)23979_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)23802_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)23979_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)23979_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "51dd631420d1ee826ffba95440f31ddbbedc5ffd9949b158b74ff4ad3dbdfb3e": {
      "address": "0x445075403c564cAa2575843DFc8fb872Dc473511",
      "txHash": "0x55c45df367c7d39eb86126fbe0337c73cbf1667c03398fcb75235ee120707222",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "AuctionBidder",
            "label": "settings",
            "type": "t_struct(Settings)9930_storage",
            "src": "contracts/AuctionBidder.sol:49"
          },
          {
            "contract": "AuctionBidder",
            "label": "addresses",
            "type": "t_struct(Addresses)9945_storage",
            "src": "contracts/AuctionBidder.sol:50"
          },
          {
            "contract": "AuctionBidder",
            "label": "contracts",
            "type": "t_struct(Contracts)9940_storage",
            "src": "contracts/AuctionBidder.sol:51"
          }
        ],
        "types": {
          "t_struct(Settings)9930_storage": {
            "label": "struct AuctionBidder.Settings",
            "members": [
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Addresses)9945_storage": {
            "label": "struct AuctionBidder.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "stakeManager",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Contracts)9940_storage": {
            "label": "struct AuctionBidder.Contracts",
            "members": [
              {
                "label": "auction",
                "type": "t_contract(IAuction)24006"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24389"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuction)24006": {
            "label": "contract IAuction"
          },
          "t_contract(IVCAuction)24389": {
            "label": "contract IVCAuction"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fe3beafc54db651d9d26fe249bd7390863146dcfcaeaca72b52cc2c9ee38ad0c": {
      "address": "0xE87814C34836912DE94A3f03824b3f1DB46d2693",
      "txHash": "0x07be0ada10ea8806e8ab10fa7efa7f3363f974ae02cae8eaacfc03512f5150f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "AuctionBidder",
            "label": "settings",
            "type": "t_struct(Settings)9933_storage",
            "src": "contracts/AuctionBidder.sol:50"
          },
          {
            "contract": "AuctionBidder",
            "label": "addresses",
            "type": "t_struct(Addresses)9948_storage",
            "src": "contracts/AuctionBidder.sol:51"
          },
          {
            "contract": "AuctionBidder",
            "label": "contracts",
            "type": "t_struct(Contracts)9943_storage",
            "src": "contracts/AuctionBidder.sol:52"
          }
        ],
        "types": {
          "t_struct(Settings)9933_storage": {
            "label": "struct AuctionBidder.Settings",
            "members": [
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Addresses)9948_storage": {
            "label": "struct AuctionBidder.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "stakeManager",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Contracts)9943_storage": {
            "label": "struct AuctionBidder.Contracts",
            "members": [
              {
                "label": "auction",
                "type": "t_contract(IAuction)24030"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuction)24030": {
            "label": "contract IAuction"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8c273d1cba398277b63967b68b11066a5acaf18777855b008dd3f746895483b9": {
      "address": "0x1494c79F3Ece7e540afd918bceB5FB7BC70aFc8a",
      "txHash": "0x07f599b05b1d12872e2b858123b86e0edd022b37c95456553c0431e4a50cad1d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "VCAuction",
            "label": "contracts",
            "type": "t_struct(Contracts)10502_storage",
            "src": "contracts/VCAuction.sol:40"
          },
          {
            "contract": "VCAuction",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts/VCAuction.sol:41"
          },
          {
            "contract": "VCAuction",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/VCAuction.sol:43"
          },
          {
            "contract": "VCAuction",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VCAuction.sol:44"
          },
          {
            "contract": "VCAuction",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VCAuction.sol:45"
          },
          {
            "contract": "VCAuction",
            "label": "originWithdrawableTokenAmounts",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VCAuction.sol:46"
          },
          {
            "contract": "VCAuction",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int256))",
            "src": "contracts/VCAuction.sol:48"
          }
        ],
        "types": {
          "t_struct(Contracts)10502_storage": {
            "label": "struct VCAuction.Contracts",
            "members": [
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24292"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24355"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24225"
              }
            ]
          },
          "t_contract(IStakingV1)24292": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV2)24355": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakeManager)24225": {
            "label": "contract IStakeManager"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int256))": {
            "label": "mapping(address => mapping(address => int256))"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "037a208662bf0f16cf668be6fdc1badcccb19b2f1b980dd1254b16ac84a46d18": {
      "address": "0x65450D63b1861B2825d2b653558B6A4E0Aea7802",
      "txHash": "0x5640b0cfefc663332e2e4edac678eb84925b99ff20285f142a3b45e1a990e8eb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b4719cdf3f0c76f067665e8022dfc3145f05d89c4ae9a269b6ecb2f59732b12b": {
      "address": "0x8DF3d5CACa4BE94c3df5357fF302A9dB06A52b48",
      "txHash": "0x7ff430e0ea982d2a8f4ce383e7844b708e4828a91e57add2a6409fbccd60e0ec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "01bdea957037e42256a08580e39795998da8949feac6c438363ad659e3236716": {
      "address": "0x58E69dE2cEC269b27D2642a474dd1BAB197544Ab",
      "txHash": "0xb030d034903556e98209bd7b5ffc460c9f50277454a738ce7c725933bfe399db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b51af88bab4bc47947ed48fb8c460026286029be70c3fb6543a067317b3d2e67": {
      "address": "0xC09f9748428E780Ed41a9aaddA4aA203a6fa69F6",
      "txHash": "0xe1a9108f7eed86c201c11fea70aa8274c5349f05c360a0d107fe0122bdb8e9e9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "01b633d1c943e8c42edaa824a26c8a5b3f3cd6bfd6c766cac2614aa3e19733fc": {
      "address": "0xA8B9D95355D2402b0B5451ABb09B727AECDBd5f2",
      "txHash": "0x00245a1fb4a91c6069640e004f6b82d74376a55d5eff49c04175734b167ec911",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bc56a42eeae4dda46c30e2f3f668a30cc670782e18093c607b38924a0f513f9d": {
      "address": "0x4DD83Bc2324fc1D9BB4466706685A2cc9E0613dC",
      "txHash": "0x06f012e47c5d984b1dffde92ac7baed62e12c254d8603ca79e403ff7fbd1af38",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "487198d164e8f567987d46f0b2e46711f727380f32c37a22101d5bbb82565ce1": {
      "address": "0xE79517cAAf0906562AaD835940Fe478A264408BE",
      "txHash": "0xb6fc169f7df78132cc8c5405b07f6dbc2a68a2c74270e952c7636b351756960e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "56780facc3f58f2d64c3b981630ebfe81e91af5a228ca3b97adce4a2a8262445": {
      "address": "0x7523f147d3553EceF70e282B6d114a91D9F9ee45",
      "txHash": "0xf7396a5fda69f4d786907909146eb6271d2a1913f233023c6e567d998cf74005",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "83457cdb9585ef5593b27b90a78663b3ea7dabbc7cb92587bb4570a706373225": {
      "address": "0x1eb8E5d00F8E1C14bbD3418f81761D86a849771E",
      "txHash": "0xbb17e53e6b7c3e24a751c714ceb1071a94072693809261611dc4c8deab24ac66",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "873095fc3fefa85ac68fc6df97ca4dcdeb7c80afcd40f2439cd1ee69a24dad29": {
      "address": "0x0c0F61712eA49687f32e5B47D375dE10E6955545",
      "txHash": "0x0ed5a35ac5fed0ef2df2147c6e8c0de7fcded3e15e3de1b89e72e0144f56315d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4c8f1759361f8dbdb33b7080b84919b811e6af1b788ed7fd41337483f4909fb2": {
      "address": "0x7f72F3Cb580E3f20662702A894985A7E2b8fe93E",
      "txHash": "0x32b5f720a17a13cfed345312659dcdc35d7242b4ffbaf6b06276b1230ee7ebe8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6a043f66df78975fa71baa8dcf656f077f80495d4693a61159e6933f8f133401": {
      "address": "0x53b5aD34dB81177CB4cE083247a6DB02808A4723",
      "txHash": "0xebcabcd6a134e7bd7107aa994637b99db4598f3c83b206cbe8c3179680438257",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e574f2855f7c7fff55fe7e9532a486c16500ecf8bba59e7d9a674371c619e780": {
      "address": "0xBb297947806d22ad3BA9C8c24836Af01F0dE509A",
      "txHash": "0x7c8e5a4e3ad56d26cc51218d0ec13102206eee84f19bc46552c05c1228c4c10c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23995_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23965_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23986_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23979_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23970_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24109_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23995_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23965_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23986_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24375"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24413"
              }
            ]
          },
          "t_contract(IToken)24375": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24413": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23979_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23970_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24109_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24109_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24093"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24093": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7c7bd20c1ee07dc8e59cd4733b8bb38748676430e7438cc3212df481de6435b7": {
      "address": "0x1F050D7968710DE5c256CC6c2811fc9f2E35D1B9",
      "txHash": "0x51d67246e012fa65ea56f19cb496796daa22e0a03bbdcd153304e82de8c0e160",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)24029_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23999_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)24020_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)24013_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)24004_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24143_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)24029_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23999_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)24020_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24409"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24447"
              }
            ]
          },
          "t_contract(IToken)24409": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24447": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)24013_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)24004_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24143_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24143_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24127"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24127": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8d5e6fcba6195774fdb266ac3674a79b04f2985a8b564e3d2588a10b9678b45b": {
      "address": "0x649c77A4CA1b274309D09A3cca759d682559d971",
      "txHash": "0xf97694015aaba8a5708664593a9e7975f0c2ab1fe346b5398b7ccb9bc5a98516",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)23860_storage)",
            "src": "contracts/Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)23825_storage)",
            "src": "contracts/Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts/Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)23830_storage))",
            "src": "contracts/Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)23872_storage",
            "src": "contracts/Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)23863_storage",
            "src": "contracts/Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)23843_storage",
            "src": "contracts/Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)23884_storage)7_storage",
            "src": "contracts/Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)23860_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)23860_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "ventureAutoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)23825_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)23825_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)23830_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)23830_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)23830_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)23872_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)23863_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)23843_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)24099"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24447"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24271"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)24099": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)24447": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)24271": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)23884_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)23884_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)24037_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)23860_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)24037_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)24037_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5765dda3ad61afa8ebb36bc2d1c76d5ad1c35ba4944f0dae5988d21ec2583a3a": {
      "address": "0x003b4701748E040f4FcB793304b16747770BaCA8",
      "txHash": "0x66bac36a5821eb60487c3a4604f1e44a4b945cd47a5028a02639c300ebf954be",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)23867_storage)",
            "src": "contracts/Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)23832_storage)",
            "src": "contracts/Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts/Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)23837_storage))",
            "src": "contracts/Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)23879_storage",
            "src": "contracts/Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)23870_storage",
            "src": "contracts/Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)23850_storage",
            "src": "contracts/Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)23891_storage)7_storage",
            "src": "contracts/Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)23867_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)23867_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "ventureAutoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)23832_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)23832_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)23837_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)23837_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)23837_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)23879_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)23870_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)23850_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)24106"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24454"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24278"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)24106": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)24454": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)24278": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)23891_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)23891_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)24044_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)23867_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)24044_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)24044_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4cc8451ee67b29e38ee97ad7130b993bab651ced6a3f64066f6d3b5dd330a985": {
      "address": "0xEe7e3122900F4ceba6318eBAA01f8B6f29aB8Af1",
      "txHash": "0xe954ec134bda8267cfa7e45f5c3978d5a0e727b8c5670a7709197f7ba5d886ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)24029_storage",
            "src": "contracts\\stake\\StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)23999_storage",
            "src": "contracts\\stake\\StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)24020_storage",
            "src": "contracts\\stake\\StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)24013_storage",
            "src": "contracts\\stake\\StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)24004_storage",
            "src": "contracts\\stake\\StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\stake\\StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24145_storage)",
            "src": "contracts\\stake\\StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)24029_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Settings)23999_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)24020_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24411"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24449"
              }
            ]
          },
          "t_contract(IToken)24411": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24449": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)24013_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)24004_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24145_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24145_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24129"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24129": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "84fd2ad20944b9e48ede8cfbad3e873794436a2ec611c4e227e425cbb38a764f": {
      "address": "0x54c4F87E6106Ca5632c98d6C0092f47048D28c32",
      "txHash": "0x3ef96746b48924ea5ce3fccf905579de769cb7a115968eca41d5f88df6dc07a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)24171_storage)",
            "src": "contracts\\Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)24136_storage)",
            "src": "contracts\\Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts\\Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24141_storage))",
            "src": "contracts\\Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)24183_storage",
            "src": "contracts\\Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)24174_storage",
            "src": "contracts\\Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)24154_storage",
            "src": "contracts\\Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)24195_storage)7_storage",
            "src": "contracts\\Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)24171_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)24171_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "ventureAutoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)24136_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)24136_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24141_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)24141_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)24141_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)24183_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)24174_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)24154_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)24407"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24839"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24670"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)24407": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)24839": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)24670": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)24195_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)24195_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)24343_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)24171_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)24343_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)24343_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fcbea7568b133948591aaddf831b1f8b1fa395496569aefa6fb17d4ea0ebec84": {
      "address": "0xFaDe99D228D328695fD9D41C4842E45997787169",
      "txHash": "0x793767a1fd18660794f108c8bc001e148999fce032a972647a316c2eae3460d6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "AuctionBidder",
            "label": "settings",
            "type": "t_struct(Settings)9958_storage",
            "src": "contracts\\AuctionBidder.sol:50"
          },
          {
            "contract": "AuctionBidder",
            "label": "addresses",
            "type": "t_struct(Addresses)9973_storage",
            "src": "contracts\\AuctionBidder.sol:51"
          },
          {
            "contract": "AuctionBidder",
            "label": "contracts",
            "type": "t_struct(Contracts)9968_storage",
            "src": "contracts\\AuctionBidder.sol:52"
          }
        ],
        "types": {
          "t_struct(Settings)9958_storage": {
            "label": "struct AuctionBidder.Settings",
            "members": [
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Addresses)9973_storage": {
            "label": "struct AuctionBidder.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "stakeManager",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Contracts)9968_storage": {
            "label": "struct AuctionBidder.Contracts",
            "members": [
              {
                "label": "auction",
                "type": "t_contract(IAuction)24066"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24449"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuction)24066": {
            "label": "contract IAuction"
          },
          "t_contract(IVCAuction)24449": {
            "label": "contract IVCAuction"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "298f2a47d366d3b4b781b82dd0e2093c5da3bc8473b1a8125ed77c78b9aa0870": {
      "address": "0x94729EfB3cF6d87d057B982d38Fbd11540333104",
      "txHash": "0xae049757865b643df3d44ccb907cdd48fc368cc236d82b348764f928843be911",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)24252_storage",
            "src": "contracts\\stake\\StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)24276_storage",
            "src": "contracts\\stake\\StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)24266_storage",
            "src": "contracts\\stake\\StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)24257_storage",
            "src": "contracts\\stake\\StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\stake\\StakeManager.sol:25"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24461_storage)",
            "src": "contracts\\stake\\StakeManager.sol:26"
          }
        ],
        "types": {
          "t_struct(Settings)24252_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)24276_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24742"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24780"
              },
              {
                "label": "bpd",
                "type": "t_contract(IBpd)24386"
              }
            ]
          },
          "t_contract(IToken)24742": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24780": {
            "label": "contract IVCAuction"
          },
          "t_contract(IBpd)24386": {
            "label": "contract IBpd"
          },
          "t_struct(StatFields)24266_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)24257_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24461_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24461_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24445"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24445": {
            "label": "enum StakeStatus",
            "members": [
              "Unknown",
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b8f2ad388b3cc5d627b50da963cf39d219b03edfd9081df9231d114ec37dd123": {
      "address": "0x04773E4d17a1886FC159b652AB95AB7ef604353C",
      "txHash": "0x77df3de68a01237ea31fc493808d732ebca13053267e12b911cb436ac03f6c5f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeMinter",
            "label": "settings",
            "type": "t_struct(Settings)29210_storage",
            "src": "contracts\\stake\\StakeMinter.sol:34"
          },
          {
            "contract": "StakeMinter",
            "label": "contracts",
            "type": "t_struct(Contracts)29232_storage",
            "src": "contracts\\stake\\StakeMinter.sol:35"
          }
        ],
        "types": {
          "t_struct(Settings)29210_storage": {
            "label": "struct StakeMinter.Settings",
            "members": [
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)29232_storage": {
            "label": "struct StakeMinter.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24801"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24839"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24781"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24718"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24690"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24658"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)24498"
              }
            ]
          },
          "t_contract(IToken)24801": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24839": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakingV2)24781": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakingV1)24718": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakeToken)24690": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24658": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)24498": {
            "label": "contract IStakeCustodian"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e22367dbaef6bea4bff1f5010f7b2eb09205cef6ec7d9c27c4512cc37dc097e9": {
      "address": "0x0Bdf12758B25F0E3883220792C0408Ba98CAD36b",
      "txHash": "0x57a791ff3e194ed6621acb680e6eb79414a064d5ecd9b90c409c86f21935311c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeReminter",
            "label": "contracts",
            "type": "t_struct(Contracts)29739_storage",
            "src": "contracts\\stake\\StakeReminter.sol:23"
          }
        ],
        "types": {
          "t_struct(Contracts)29739_storage": {
            "label": "struct StakeReminter.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24801"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24658"
              },
              {
                "label": "stakeBurner",
                "type": "t_contract(IStakeBurner)24468"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24670"
              }
            ]
          },
          "t_contract(IToken)24801": {
            "label": "contract IToken"
          },
          "t_contract(IStakeManager)24658": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeBurner)24468": {
            "label": "contract IStakeBurner"
          },
          "t_contract(IStakeMinter)24670": {
            "label": "contract IStakeMinter"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ec9f26d159466c5b7ed577a386679573f765e6ad7defa9985351a96d1eff5511": {
      "address": "0x94a50fAc883cF3274D678C3F6918489ECed0FD0b",
      "txHash": "0x435fafcdf2d0162e82453131935c18d8f37404f64f39c5e6d6e562f598a532e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeUpgrader",
            "label": "settings",
            "type": "t_struct(Settings)30273_storage",
            "src": "contracts\\stake\\StakeUpgrader.sol:31"
          },
          {
            "contract": "StakeUpgrader",
            "label": "contracts",
            "type": "t_struct(Contracts)30289_storage",
            "src": "contracts\\stake\\StakeUpgrader.sol:32"
          }
        ],
        "types": {
          "t_struct(Settings)30273_storage": {
            "label": "struct StakeUpgrader.Settings",
            "members": [
              {
                "label": "maxShareEventActive",
                "type": "t_bool"
              },
              {
                "label": "maxShareMaxDays",
                "type": "t_uint16"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)30289_storage": {
            "label": "struct StakeUpgrader.Contracts",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24690"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24658"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)24498"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24781"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24718"
              }
            ]
          },
          "t_contract(IStakeToken)24690": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24658": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)24498": {
            "label": "contract IStakeCustodian"
          },
          "t_contract(IStakingV2)24781": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakingV1)24718": {
            "label": "contract IStakingV1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7e1782f58f590792f5e436fbe3d77bc6e64f2b4b489994629252a32c261b7ed6": {
      "address": "0xbF0aeD06Fa15fFe1ef9E34960c1511E134Fa0D06",
      "txHash": "0x8f2850734650a3cd918af70eab99cb87d85313405c257f3c18ec223eb31dd696",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeBurner",
            "label": "settings",
            "type": "t_struct(Settings)26486_storage",
            "src": "contracts\\stake\\StakeBurner.sol:40"
          },
          {
            "contract": "StakeBurner",
            "label": "contracts",
            "type": "t_struct(Contracts)26511_storage",
            "src": "contracts\\stake\\StakeBurner.sol:41"
          }
        ],
        "types": {
          "t_struct(Settings)26486_storage": {
            "label": "struct StakeBurner.Settings",
            "members": [
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)26511_storage": {
            "label": "struct StakeBurner.Contracts",
            "members": [
              {
                "label": "bpd",
                "type": "t_contract(IBpd)24445"
              },
              {
                "label": "token",
                "type": "t_contract(IToken)24801"
              },
              {
                "label": "auction",
                "type": "t_contract(IAuction)24372"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24690"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24658"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)24498"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24718"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24781"
              }
            ]
          },
          "t_contract(IBpd)24445": {
            "label": "contract IBpd"
          },
          "t_contract(IToken)24801": {
            "label": "contract IToken"
          },
          "t_contract(IAuction)24372": {
            "label": "contract IAuction"
          },
          "t_contract(IStakeToken)24690": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24658": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)24498": {
            "label": "contract IStakeCustodian"
          },
          "t_contract(IStakingV1)24718": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV2)24781": {
            "label": "contract IStakingV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a77d7ec2e3cecdcc7acf89896f2d0018a8dd5c378a2c51c33c442e218e2d7f9f": {
      "address": "0xDA87c36CB7583a26CFdeb73037C8864F81DA8655",
      "txHash": "0xa954959efd49fcb7cca6864fbde11515388ace58650c09f7e0f347897f8683f0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:384"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "contract": "StakeToken",
            "label": "contracts",
            "type": "t_struct(Contracts)29930_storage",
            "src": "contracts\\stake\\StakeToken.sol:30"
          }
        ],
        "types": {
          "t_struct(Contracts)29930_storage": {
            "label": "struct StakeToken.Contracts",
            "members": [
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24782"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24601"
              }
            ]
          },
          "t_contract(IVCAuction)24782": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeManager)24601": {
            "label": "contract IStakeManager"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "77a7473a208e3f973e4aa6e1d05a4098dcae9c4acb88d97106abea884f6feb22": {
      "address": "0x7605007F77AaBb78cD9A3890207927E0BAC57404",
      "txHash": "0x4331cbb6d8cba9b573e8bdd94aaa376db58dbde4f60cabf2f4b61ec84ed64b3e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeCustodian",
            "label": "stakesOf",
            "type": "t_mapping(t_address,t_struct(UintSet)1159_storage)",
            "src": "contracts\\stake\\StakeCustodian.sol:15"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(UintSet)1159_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)1159_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)755_storage"
              }
            ]
          },
          "t_struct(Set)755_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b1215491e4d5b37df3925e045f35b4e31a0151d94e779e5fe8cd47dd55155be9": {
      "address": "0x89bBBdD52A7c69d48e2c1804cf7FABb34a0D936E",
      "txHash": "0x129621e9a7e1502722efb233c9c03117dbfcccdaa4b8283b80e3706233953d55",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "BPD",
            "label": "bpdShares",
            "type": "t_array(t_uint48)5_storage",
            "src": "contracts\\stake\\BPD.sol:22"
          },
          {
            "contract": "BPD",
            "label": "settings",
            "type": "t_struct(Settings)25994_storage",
            "src": "contracts\\stake\\BPD.sol:23"
          }
        ],
        "types": {
          "t_array(t_uint48)5_storage": {
            "label": "uint48[5]"
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_struct(Settings)25994_storage": {
            "label": "struct BPD.Settings",
            "members": [
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ccb0eb772832acd02cc33ce315d480084f26b566e7d2460ac9d9a06b7d7fea13": {
      "address": "0xc8E6c0De5F7cC5E1504CCf191c298F150ed18007",
      "txHash": "0x19d93422e2b2048815f15d456450008d6dd606ad3e2a56b23824f6b7d86faf7e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "VCAuction",
            "label": "contracts",
            "type": "t_struct(Contracts)10855_storage",
            "src": "contracts\\VCAuction.sol:40"
          },
          {
            "contract": "VCAuction",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts\\VCAuction.sol:41"
          },
          {
            "contract": "VCAuction",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\VCAuction.sol:43"
          },
          {
            "contract": "VCAuction",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\VCAuction.sol:44"
          },
          {
            "contract": "VCAuction",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\VCAuction.sol:45"
          },
          {
            "contract": "VCAuction",
            "label": "originWithdrawableTokenAmounts",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\VCAuction.sol:46"
          },
          {
            "contract": "VCAuction",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int256))",
            "src": "contracts\\VCAuction.sol:48"
          }
        ],
        "types": {
          "t_struct(Contracts)10855_storage": {
            "label": "struct VCAuction.Contracts",
            "members": [
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24718"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24781"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24658"
              }
            ]
          },
          "t_contract(IStakingV1)24718": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV2)24781": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakeManager)24658": {
            "label": "contract IStakeManager"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int256))": {
            "label": "mapping(address => mapping(address => int256))"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bd4ce58c73f77d81b2a372e8158b96e6f5bd366b79ffb5254bce6eae1078dfbe": {
      "address": "0x7B3fBF9F8273D35e42a38843d1961B80BF93A655",
      "txHash": "0x36fb9e0807f8e3d3b7619a524e74675b0fe36d3e560c0f30fe7d1499fa8db47f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "BPD",
            "label": "bpdShares",
            "type": "t_array(t_uint48)5_storage",
            "src": "contracts\\stake\\BPD.sol:22"
          },
          {
            "contract": "BPD",
            "label": "settings",
            "type": "t_struct(Settings)25935_storage",
            "src": "contracts\\stake\\BPD.sol:23"
          }
        ],
        "types": {
          "t_array(t_uint48)5_storage": {
            "label": "uint48[5]"
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_struct(Settings)25935_storage": {
            "label": "struct BPD.Settings",
            "members": [
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "39db956364bae82135f72d846808c8dfb6221a6d6c1d9380a5cd921b4ded4fcc": {
      "address": "0x61Ef10F1D620442E407166859bFf0621E3f26E68",
      "txHash": "0xd9d99b9fdc65b4550e4c271ad33ece08eaf47018a9c34f67cc15574a20b4d458",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)24259_storage",
            "src": "contracts\\stake\\StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)24283_storage",
            "src": "contracts\\stake\\StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)24273_storage",
            "src": "contracts\\stake\\StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)24264_storage",
            "src": "contracts\\stake\\StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\stake\\StakeManager.sol:25"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24468_storage)",
            "src": "contracts\\stake\\StakeManager.sol:26"
          }
        ],
        "types": {
          "t_struct(Settings)24259_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)24283_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24749"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24787"
              },
              {
                "label": "bpd",
                "type": "t_contract(IBpd)24393"
              }
            ]
          },
          "t_contract(IToken)24749": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24787": {
            "label": "contract IVCAuction"
          },
          "t_contract(IBpd)24393": {
            "label": "contract IBpd"
          },
          "t_struct(StatFields)24273_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)24264_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24468_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24468_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24452"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24452": {
            "label": "enum StakeStatus",
            "members": [
              "Unknown",
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c45d1f387b2d5c93f9a56d62536eeb9ff9de3b6395432429a3dea504b4c136f": {
      "address": "0x6f1Be1Cd267cBd05fb0B9519ea80473409a0FaBf",
      "txHash": "0x507c488608e337343b325ab1f537ba41237a6b74204f4af5926eb9cb1dfc6d3e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)1424_storage",
            "src": "contracts\\stake\\StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)1448_storage",
            "src": "contracts\\stake\\StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)1438_storage",
            "src": "contracts\\stake\\StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)1429_storage",
            "src": "contracts\\stake\\StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\stake\\StakeManager.sol:25"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)1509_storage)",
            "src": "contracts\\stake\\StakeManager.sol:26"
          }
        ],
        "types": {
          "t_struct(Settings)1424_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)1448_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)1667"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)1705"
              },
              {
                "label": "bpd",
                "type": "t_contract(IBpd)1487"
              }
            ]
          },
          "t_contract(IToken)1667": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)1705": {
            "label": "contract IVCAuction"
          },
          "t_contract(IBpd)1487": {
            "label": "contract IBpd"
          },
          "t_struct(StatFields)1438_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)1429_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)1509_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)1509_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)1493"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)1493": {
            "label": "enum StakeStatus",
            "members": [
              "Unknown",
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8621fc9e4d3d75b801a4f95efe8d5c4d718228865748f373d87a444865fa7261": {
      "address": "0xb620B506CE72e284379B2637b4F56A08D0B2E643",
      "txHash": "0x2bde430847331f631ba00a219f98c9e3285f088b36026a7f4d33e791ff8bbb21",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeMinter",
            "label": "settings",
            "type": "t_struct(Settings)29157_storage",
            "src": "contracts\\stake\\StakeMinter.sol:34"
          },
          {
            "contract": "StakeMinter",
            "label": "contracts",
            "type": "t_struct(Contracts)29179_storage",
            "src": "contracts\\stake\\StakeMinter.sol:35"
          }
        ],
        "types": {
          "t_struct(Settings)29157_storage": {
            "label": "struct StakeMinter.Settings",
            "members": [
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)29179_storage": {
            "label": "struct StakeMinter.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24744"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24782"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24724"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24661"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24633"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24601"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)24441"
              }
            ]
          },
          "t_contract(IToken)24744": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24782": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakingV2)24724": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakingV1)24661": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakeToken)24633": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24601": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)24441": {
            "label": "contract IStakeCustodian"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "31fa8c2dece3c30012740beede30f3eb259b9ee88235b35f20d74fcefc2413b4": {
      "address": "0x929179e1B5e7c61BE7bcA26A5FBCd801F102973F",
      "txHash": "0x5f5292ac05929eb1bfdc826811018774c5d22b767a5f92248145c02152478985",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeUpgrader",
            "label": "settings",
            "type": "t_struct(Settings)30214_storage",
            "src": "contracts\\stake\\StakeUpgrader.sol:31"
          },
          {
            "contract": "StakeUpgrader",
            "label": "contracts",
            "type": "t_struct(Contracts)30230_storage",
            "src": "contracts\\stake\\StakeUpgrader.sol:32"
          }
        ],
        "types": {
          "t_struct(Settings)30214_storage": {
            "label": "struct StakeUpgrader.Settings",
            "members": [
              {
                "label": "maxShareEventActive",
                "type": "t_bool"
              },
              {
                "label": "maxShareMaxDays",
                "type": "t_uint16"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)30230_storage": {
            "label": "struct StakeUpgrader.Contracts",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24633"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24601"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)24441"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24724"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24661"
              }
            ]
          },
          "t_contract(IStakeToken)24633": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24601": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)24441": {
            "label": "contract IStakeCustodian"
          },
          "t_contract(IStakingV2)24724": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakingV1)24661": {
            "label": "contract IStakingV1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4062cd8eab756284ed5e4edf35f9f4e76587648845633cfe7d78980845020079": {
      "address": "0x581e8103334C001225de21481Cf3762fb553d540",
      "txHash": "0xf3361c309b558c435e4ed9d74cdcd24dfaa65daa8fde83f2e3e88db53e7371a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeBurner",
            "label": "settings",
            "type": "t_struct(Settings)26424_storage",
            "src": "contracts\\stake\\StakeBurner.sol:40"
          },
          {
            "contract": "StakeBurner",
            "label": "contracts",
            "type": "t_struct(Contracts)26449_storage",
            "src": "contracts\\stake\\StakeBurner.sol:41"
          }
        ],
        "types": {
          "t_struct(Settings)26424_storage": {
            "label": "struct StakeBurner.Settings",
            "members": [
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)26449_storage": {
            "label": "struct StakeBurner.Contracts",
            "members": [
              {
                "label": "bpd",
                "type": "t_contract(IBpd)24388"
              },
              {
                "label": "token",
                "type": "t_contract(IToken)24744"
              },
              {
                "label": "auction",
                "type": "t_contract(IAuction)24315"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24633"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24601"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)24441"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24661"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24724"
              }
            ]
          },
          "t_contract(IBpd)24388": {
            "label": "contract IBpd"
          },
          "t_contract(IToken)24744": {
            "label": "contract IToken"
          },
          "t_contract(IAuction)24315": {
            "label": "contract IAuction"
          },
          "t_contract(IStakeToken)24633": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24601": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)24441": {
            "label": "contract IStakeCustodian"
          },
          "t_contract(IStakingV1)24661": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV2)24724": {
            "label": "contract IStakingV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "769a4b0a2a4b2a22d3a0750c23969f06e74492dce07e47832320b7c256b9da5b": {
      "address": "0x8f496527D58E9b68FD3758442E3c479812E2f7ba",
      "txHash": "0xc6542a1844ccff97dc51add1b260cd5670b09f0d0fbd82217be94a622a1fe999",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)24115_storage)",
            "src": "contracts\\Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)24082_storage)",
            "src": "contracts\\Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts\\Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24087_storage))",
            "src": "contracts\\Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)24127_storage",
            "src": "contracts\\Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)24118_storage",
            "src": "contracts\\Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)24100_storage",
            "src": "contracts\\Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)24139_storage)7_storage",
            "src": "contracts\\Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)24115_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)24115_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)24082_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)24082_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24087_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)24087_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)24087_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)24127_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)24118_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)24100_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)24351"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24783"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24614"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)24351": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)24783": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)24614": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)24139_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)24139_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)24287_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)24115_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)24287_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)24287_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "20795ccc93bd0766fbe3f9f4a8f5ca5416b8d20c9346e150e5c85812d1be0a3f": {
      "address": "0x95f314872fbde41AB35F331FB899B927cf14418f",
      "txHash": "0x9edaf00d805e390564aa4a43c6da12107a5cf5f0928b1c67a8f8bf515f6837aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)24255_storage",
            "src": "contracts\\stake\\StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)24279_storage",
            "src": "contracts\\stake\\StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)24269_storage",
            "src": "contracts\\stake\\StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)24260_storage",
            "src": "contracts\\stake\\StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\stake\\StakeManager.sol:25"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)24464_storage)",
            "src": "contracts\\stake\\StakeManager.sol:26"
          }
        ],
        "types": {
          "t_struct(Settings)24255_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)24279_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24745"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24783"
              },
              {
                "label": "bpd",
                "type": "t_contract(IBpd)24389"
              }
            ]
          },
          "t_contract(IToken)24745": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24783": {
            "label": "contract IVCAuction"
          },
          "t_contract(IBpd)24389": {
            "label": "contract IBpd"
          },
          "t_struct(StatFields)24269_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)24260_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)24464_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)24464_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)24448"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)24448": {
            "label": "enum StakeStatus",
            "members": [
              "Unknown",
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6b293502b4383710db10a1a812f44475fa6076fc9c3250a320b1a032e3832f80": {
      "address": "0x25E38F81f05ede905e8A5FB34937Ca7F0E8D4AF4",
      "txHash": "0x022b82317afe41a1a95c731a9f12c313642f0658ebae59491dd5eabc4010abd7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)24183_storage)",
            "src": "contracts\\Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)24150_storage)",
            "src": "contracts\\Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts\\Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24155_storage))",
            "src": "contracts\\Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)24195_storage",
            "src": "contracts\\Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)24186_storage",
            "src": "contracts\\Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)24168_storage",
            "src": "contracts\\Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)24207_storage)7_storage",
            "src": "contracts\\Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)24183_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)24183_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)24150_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)24150_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24155_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)24155_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)24155_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)24195_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)24186_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)24168_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)24419"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24851"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24682"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)24419": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)24851": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)24682": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)24207_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)24207_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)24355_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)24183_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)24355_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)24355_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "53b5e7052fd34c8c306dc13166d8d1f6d0feb65542cac804f7bf6a2e5e652767": {
      "address": "0x09A06FaF6B99D54469fa8054DEeB6d95e986D0fc",
      "txHash": "0x8569ed6d9ff1a33e00f5e0ef9488d2398e0b22e2b84515e81d28717d7ccf5b93",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)24186_storage)",
            "src": "contracts\\Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)24153_storage)",
            "src": "contracts\\Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts\\Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24158_storage))",
            "src": "contracts\\Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)24198_storage",
            "src": "contracts\\Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)24189_storage",
            "src": "contracts\\Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)24171_storage",
            "src": "contracts\\Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)24210_storage)7_storage",
            "src": "contracts\\Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)24186_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)24186_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)24153_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)24153_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24158_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)24158_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)24158_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)24198_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)24189_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)24171_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)24422"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24854"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24685"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)24422": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)24854": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)24685": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)24210_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)24210_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)24358_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)24186_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)24358_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)24358_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ed87c35cad033da6fbc8eb1ef857d8dc4a16248e9169a806c280c21f7002dced": {
      "address": "0x889d47DC6e7c434bf2Ee02f31cD1c975252a095E",
      "txHash": "0x7aee86cb29aee9665cd83181335d80cae4b8b6a3966db20702a1601a7e600fa8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)24187_storage)",
            "src": "contracts\\Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)24154_storage)",
            "src": "contracts\\Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts\\Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24159_storage))",
            "src": "contracts\\Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)24199_storage",
            "src": "contracts\\Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)24190_storage",
            "src": "contracts\\Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)24172_storage",
            "src": "contracts\\Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)24211_storage)7_storage",
            "src": "contracts\\Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)24187_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)24187_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)24154_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)24154_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24159_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)24159_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)24159_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)24199_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)24190_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)24172_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)24423"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24855"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24686"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)24423": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)24855": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)24686": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)24211_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)24211_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)24359_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)24187_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)24359_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)24359_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9bd6a7ed4f5cf43e0815ba3388456757f7e75c83cf62a6e12e129c542284ea76": {
      "address": "0x934b17c8dc591096481e6BdB0334F4a6EF18e715",
      "txHash": "0xec894d3faf75d179664daf4eb2ae7cbac1433de3f45a5c5da42e2815b95e05a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)3927_storage)",
            "src": "contracts\\Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)3894_storage)",
            "src": "contracts\\Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)1550_storage)",
            "src": "contracts\\Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)3899_storage))",
            "src": "contracts\\Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)3939_storage",
            "src": "contracts\\Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)3930_storage",
            "src": "contracts\\Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)3912_storage",
            "src": "contracts\\Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)3951_storage)7_storage",
            "src": "contracts\\Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)3927_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)3927_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)3894_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)3894_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)1550_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)1550_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1146_storage"
              }
            ]
          },
          "t_struct(Set)1146_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)3899_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)3899_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)3899_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)3939_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)3930_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)3912_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)4023"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)4093"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)4035"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)2046"
              }
            ]
          },
          "t_contract(IAuctionV2)4023": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)4093": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)4035": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)2046": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)3951_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)3951_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)3959_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)3927_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)3959_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)3959_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e78c3581fcb5977053bc609f38e9c9b2089b768472edeed88fbe28f637c23060": {
      "address": "0x524B26FfD755656EA207267941F54c49b24CcD40",
      "txHash": "0xa69388437b9beec827d96717d91fcf5197bc84ecbb21ca318ab0e2b69cafe085",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)24114_storage)",
            "src": "contracts\\Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)24081_storage)",
            "src": "contracts\\Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts\\Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24086_storage))",
            "src": "contracts\\Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)24126_storage",
            "src": "contracts\\Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)24117_storage",
            "src": "contracts\\Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)24099_storage",
            "src": "contracts\\Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)24138_storage)7_storage",
            "src": "contracts\\Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)24114_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)24114_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)24081_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)24081_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24086_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)24086_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)24086_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)24126_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)24117_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)24099_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)24350"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24782"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24613"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)24350": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)24782": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)24613": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)24138_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)24138_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)24286_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)24114_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)24286_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)24286_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7d30af675b7aa906740d9ae838b73e1752b733b2677d589dd4c23aefd4cd57a6": {
      "address": "0x7a7a97C88A4230249725b1e66EEAFe18b873B122",
      "txHash": "0xc645aed739ff1676aad08311cf972066b80b6ad1ee9bd4373a7f026bd7270366",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeMinter",
            "label": "settings",
            "type": "t_struct(Settings)29157_storage",
            "src": "contracts\\stake\\StakeMinter.sol:34"
          },
          {
            "contract": "StakeMinter",
            "label": "contracts",
            "type": "t_struct(Contracts)29179_storage",
            "src": "contracts\\stake\\StakeMinter.sol:35"
          }
        ],
        "types": {
          "t_struct(Settings)29157_storage": {
            "label": "struct StakeMinter.Settings",
            "members": [
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)29179_storage": {
            "label": "struct StakeMinter.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24744"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24782"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24724"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24661"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24633"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24601"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)24441"
              }
            ]
          },
          "t_contract(IToken)24744": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24782": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakingV2)24724": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakingV1)24661": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakeToken)24633": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24601": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)24441": {
            "label": "contract IStakeCustodian"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "37711d1d23c7040a9eca28fe758c5f580ccfaf53623720209b786327b803dd5f": {
      "address": "0x789E2D8F6B0B6b440B1D6902baC1f201ccf25cA0",
      "txHash": "0x0b2b5a99551144e316ce37071c09593d93745f8541a28cb71385b84e19a9c1fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeBurner",
            "label": "settings",
            "type": "t_struct(Settings)26433_storage",
            "src": "contracts\\stake\\StakeBurner.sol:40"
          },
          {
            "contract": "StakeBurner",
            "label": "contracts",
            "type": "t_struct(Contracts)26458_storage",
            "src": "contracts\\stake\\StakeBurner.sol:41"
          }
        ],
        "types": {
          "t_struct(Settings)26433_storage": {
            "label": "struct StakeBurner.Settings",
            "members": [
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)26458_storage": {
            "label": "struct StakeBurner.Contracts",
            "members": [
              {
                "label": "bpd",
                "type": "t_contract(IBpd)24388"
              },
              {
                "label": "token",
                "type": "t_contract(IToken)24753"
              },
              {
                "label": "auction",
                "type": "t_contract(IAuction)24315"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24642"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24601"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)24441"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24670"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24733"
              }
            ]
          },
          "t_contract(IBpd)24388": {
            "label": "contract IBpd"
          },
          "t_contract(IToken)24753": {
            "label": "contract IToken"
          },
          "t_contract(IAuction)24315": {
            "label": "contract IAuction"
          },
          "t_contract(IStakeToken)24642": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24601": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)24441": {
            "label": "contract IStakeCustodian"
          },
          "t_contract(IStakingV1)24670": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV2)24733": {
            "label": "contract IStakingV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cd424237ad17ad0f9af3dda89ece200ee6c003b942fea59ee7875e1613525fbb": {
      "address": "0xb41369aAc51232c7B82E98cD86263cC2153dB769",
      "txHash": "0x7364580656f12cd4e4f7c9ae43d923211b33df38d0c87fabfe360b74e7186db1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeUpgrader",
            "label": "settings",
            "type": "t_struct(Settings)30247_storage",
            "src": "contracts\\stake\\StakeUpgrader.sol:31"
          },
          {
            "contract": "StakeUpgrader",
            "label": "contracts",
            "type": "t_struct(Contracts)30263_storage",
            "src": "contracts\\stake\\StakeUpgrader.sol:32"
          }
        ],
        "types": {
          "t_struct(Settings)30247_storage": {
            "label": "struct StakeUpgrader.Settings",
            "members": [
              {
                "label": "maxShareEventActive",
                "type": "t_bool"
              },
              {
                "label": "maxShareMaxDays",
                "type": "t_uint16"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)30263_storage": {
            "label": "struct StakeUpgrader.Contracts",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24642"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24601"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)24441"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24733"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24670"
              }
            ]
          },
          "t_contract(IStakeToken)24642": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24601": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)24441": {
            "label": "contract IStakeCustodian"
          },
          "t_contract(IStakingV2)24733": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakingV1)24670": {
            "label": "contract IStakingV1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "80c74a646ca0554f8fd4aa3556640c2ff6a4f742862b17e305b508ee7d0ca9cc": {
      "address": "0x5e832174a70350C9DedA0B8F675264245d727D8f",
      "txHash": "0x53c8f90eb6f163316fb10d595d38d5ab4b2456839633d8804af1b56c8cf87793",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:384"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "contract": "StakeToken",
            "label": "contracts",
            "type": "t_struct(Contracts)29938_storage",
            "src": "contracts\\stake\\StakeToken.sol:30"
          }
        ],
        "types": {
          "t_struct(Contracts)29938_storage": {
            "label": "struct StakeToken.Contracts",
            "members": [
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24791"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24601"
              }
            ]
          },
          "t_contract(IVCAuction)24791": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeManager)24601": {
            "label": "contract IStakeManager"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d24b3558c20bba2c6d31b0c02c5c56ae3083b6ea332e25a8a522cec84ef6b863": {
      "address": "0xc0D73bdBce0e244639eDAC80265bafa80B9C8b47",
      "txHash": "0x2ebf340091a433e809688c8acf3b646801c508ca4d333f97ebe629c856cf45d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeCustodian",
            "label": "stakesOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts\\stake\\StakeCustodian.sol:15"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "78c9ffce706e5e10dd2d2efad4d22b9a8627fb3a9ca2b5ce01ccfef676810329": {
      "address": "0xA1be8Ad451C819C2b7A764F8F2a6DaE622d1C620",
      "txHash": "0x0e582ca6ceef9bf5e9b75db992ab4d1abe802413b148b237bcea7eef450a6b29",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)24097_storage)",
            "src": "contracts\\auction\\Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)24064_storage)",
            "src": "contracts\\auction\\Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts\\auction\\Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24069_storage))",
            "src": "contracts\\auction\\Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)24109_storage",
            "src": "contracts\\auction\\Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)24100_storage",
            "src": "contracts\\auction\\Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)24082_storage",
            "src": "contracts\\auction\\Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)24121_storage)7_storage",
            "src": "contracts\\auction\\Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)24097_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)24097_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)24064_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)24064_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)24069_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)24069_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)24069_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)24109_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)24100_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)24082_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)24333"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24774"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24596"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)24333": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)24774": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)24596": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)24121_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)24121_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)24269_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)24097_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)24269_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)24269_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dd7a7c145293860b3ea26091eaa55eb4da6db37d290184353e4a2905fff0191c": {
      "address": "0x915206218BD0C3d7f8301681edb4D981757d5657",
      "txHash": "0x0e517d047344f8ff13d6dfdf671cce5348e9a8634336621de92b9ed7a9e60b95",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakingV2",
            "label": "addresses",
            "type": "t_struct(Addresses)16952_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:96"
          },
          {
            "contract": "StakingV2",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20139",
            "src": "contracts\\archive\\v2\\StakingV2.sol:97"
          },
          {
            "contract": "StakingV2",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:105"
          },
          {
            "contract": "StakingV2",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:106"
          },
          {
            "contract": "StakingV2",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:107"
          },
          {
            "contract": "StakingV2",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:108"
          },
          {
            "contract": "StakingV2",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:109"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:110"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:111"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:112"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:113"
          },
          {
            "contract": "StakingV2",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)16945_storage))",
            "src": "contracts\\archive\\v2\\StakingV2.sol:117"
          },
          {
            "contract": "StakingV2",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:119"
          },
          {
            "contract": "StakingV2",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)16928_storage)dyn_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:121"
          },
          {
            "contract": "StakingV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:124"
          },
          {
            "contract": "StakingV2",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:126"
          },
          {
            "contract": "StakingV2",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:127"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:129"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\archive\\v2\\StakingV2.sol:131"
          },
          {
            "contract": "StakingV2",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:132"
          },
          {
            "contract": "StakingV2",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:134"
          },
          {
            "contract": "StakingV2",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:136"
          },
          {
            "contract": "StakingV2",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:137"
          },
          {
            "contract": "StakingV2",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:140"
          },
          {
            "contract": "StakingV2",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:142"
          },
          {
            "contract": "StakingV2",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\archive\\v2\\StakingV2.sol:144"
          },
          {
            "contract": "StakingV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:146"
          },
          {
            "contract": "StakingV2",
            "label": "bpd",
            "type": "t_struct(BPDPool)16961_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:149"
          },
          {
            "contract": "StakingV2",
            "label": "bpd128",
            "type": "t_struct(BPDPool128)16970_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:150"
          }
        ],
        "types": {
          "t_struct(Addresses)16952_storage": {
            "label": "struct StakingV2.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "subBalances",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IStakingV1)20139": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)16945_storage))": {
            "label": "mapping(address => mapping(uint256 => struct StakingV2.Session))"
          },
          "t_mapping(t_uint256,t_struct(Session)16945_storage)": {
            "label": "mapping(uint256 => struct StakingV2.Session)"
          },
          "t_struct(Session)16945_storage": {
            "label": "struct StakingV2.Session",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "firstPayout",
                "type": "t_uint256"
              },
              {
                "label": "lastPayout",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "payout",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_struct(Payout)16928_storage)dyn_storage": {
            "label": "struct StakingV2.Payout[]"
          },
          "t_struct(Payout)16928_storage": {
            "label": "struct StakingV2.Payout",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_struct(BPDPool)16961_storage": {
            "label": "struct StakingV2.BPDPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint96)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint96)5_storage"
              }
            ]
          },
          "t_array(t_uint96)5_storage": {
            "label": "uint96[5]"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(BPDPool128)16970_storage": {
            "label": "struct StakingV2.BPDPool128",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "15df090cb55efdecec8cbdde252c572753dbf87639172566e926599bd4fb5bec": {
      "address": "0x91c64B09392de7fBfbbD4049bE177064698cE46D",
      "txHash": "0x53faab52f33b90d7ace01f23eb9c66626f5dc552f81f4fbb86391fb34f7ca80e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakingV2",
            "label": "addresses",
            "type": "t_struct(Addresses)1844_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:96"
          },
          {
            "contract": "StakingV2",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)4855",
            "src": "contracts\\archive\\v2\\StakingV2.sol:97"
          },
          {
            "contract": "StakingV2",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:105"
          },
          {
            "contract": "StakingV2",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:106"
          },
          {
            "contract": "StakingV2",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:107"
          },
          {
            "contract": "StakingV2",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:108"
          },
          {
            "contract": "StakingV2",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:109"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:110"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:111"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:112"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:113"
          },
          {
            "contract": "StakingV2",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)1837_storage))",
            "src": "contracts\\archive\\v2\\StakingV2.sol:117"
          },
          {
            "contract": "StakingV2",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:119"
          },
          {
            "contract": "StakingV2",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)1820_storage)dyn_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:121"
          },
          {
            "contract": "StakingV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:124"
          },
          {
            "contract": "StakingV2",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:126"
          },
          {
            "contract": "StakingV2",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:127"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:129"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\archive\\v2\\StakingV2.sol:131"
          },
          {
            "contract": "StakingV2",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:132"
          },
          {
            "contract": "StakingV2",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:134"
          },
          {
            "contract": "StakingV2",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:136"
          },
          {
            "contract": "StakingV2",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1495_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:137"
          },
          {
            "contract": "StakingV2",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:140"
          },
          {
            "contract": "StakingV2",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:142"
          },
          {
            "contract": "StakingV2",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\archive\\v2\\StakingV2.sol:144"
          },
          {
            "contract": "StakingV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:146"
          },
          {
            "contract": "StakingV2",
            "label": "bpd",
            "type": "t_struct(BPDPool)1853_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:149"
          },
          {
            "contract": "StakingV2",
            "label": "bpd128",
            "type": "t_struct(BPDPool128)1862_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:150"
          }
        ],
        "types": {
          "t_struct(Addresses)1844_storage": {
            "label": "struct StakingV2.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "subBalances",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IStakingV1)4855": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)1837_storage))": {
            "label": "mapping(address => mapping(uint256 => struct StakingV2.Session))"
          },
          "t_mapping(t_uint256,t_struct(Session)1837_storage)": {
            "label": "mapping(uint256 => struct StakingV2.Session)"
          },
          "t_struct(Session)1837_storage": {
            "label": "struct StakingV2.Session",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "firstPayout",
                "type": "t_uint256"
              },
              {
                "label": "lastPayout",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "payout",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_struct(Payout)1820_storage)dyn_storage": {
            "label": "struct StakingV2.Payout[]"
          },
          "t_struct(Payout)1820_storage": {
            "label": "struct StakingV2.Payout",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)1495_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1218_storage"
              }
            ]
          },
          "t_struct(Set)1218_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_struct(BPDPool)1853_storage": {
            "label": "struct StakingV2.BPDPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint96)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint96)5_storage"
              }
            ]
          },
          "t_array(t_uint96)5_storage": {
            "label": "uint96[5]"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(BPDPool128)1862_storage": {
            "label": "struct StakingV2.BPDPool128",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "429ba04ecba8aa48df33b7066021f912f4ebee246942240f481189e65e897d06": {
      "address": "0xf477aF6c10A83A619Cc6Ae833cCc119A98A5ebc6",
      "txHash": "0x87de1303e0cf15f3e5035c5b01695d2a6fb2786dcc40fc4e477005ce4b458f19",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakingV2_1",
            "label": "addresses",
            "type": "t_struct(Addresses)8234_storage",
            "src": "contracts\\StakingV2_1.sol:52"
          },
          {
            "contract": "StakingV2_1",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)25523",
            "src": "contracts\\StakingV2_1.sol:53"
          },
          {
            "contract": "StakingV2_1",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:61"
          },
          {
            "contract": "StakingV2_1",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:62"
          },
          {
            "contract": "StakingV2_1",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:63"
          },
          {
            "contract": "StakingV2_1",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:64"
          },
          {
            "contract": "StakingV2_1",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:65"
          },
          {
            "contract": "StakingV2_1",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:66"
          },
          {
            "contract": "StakingV2_1",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:67"
          },
          {
            "contract": "StakingV2_1",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:68"
          },
          {
            "contract": "StakingV2_1",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:69"
          },
          {
            "contract": "StakingV2_1",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)8227_storage))",
            "src": "contracts\\StakingV2_1.sol:73"
          },
          {
            "contract": "StakingV2_1",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\StakingV2_1.sol:75"
          },
          {
            "contract": "StakingV2_1",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)8210_storage)dyn_storage",
            "src": "contracts\\StakingV2_1.sol:77"
          },
          {
            "contract": "StakingV2_1",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\StakingV2_1.sol:80"
          },
          {
            "contract": "StakingV2_1",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:82"
          },
          {
            "contract": "StakingV2_1",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:83"
          },
          {
            "contract": "StakingV2_1",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\StakingV2_1.sol:85"
          },
          {
            "contract": "StakingV2_1",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\StakingV2_1.sol:87"
          },
          {
            "contract": "StakingV2_1",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:88"
          },
          {
            "contract": "StakingV2_1",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts\\StakingV2_1.sol:90"
          },
          {
            "contract": "StakingV2_1",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\StakingV2_1.sol:92"
          },
          {
            "contract": "StakingV2_1",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts\\StakingV2_1.sol:93"
          },
          {
            "contract": "StakingV2_1",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\StakingV2_1.sol:96"
          },
          {
            "contract": "StakingV2_1",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\StakingV2_1.sol:98"
          },
          {
            "contract": "StakingV2_1",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\StakingV2_1.sol:100"
          },
          {
            "contract": "StakingV2_1",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\StakingV2_1.sol:102"
          },
          {
            "contract": "StakingV2_1",
            "label": "bpd",
            "type": "t_struct(BPDPool)8243_storage",
            "src": "contracts\\StakingV2_1.sol:105"
          },
          {
            "contract": "StakingV2_1",
            "label": "bpd128",
            "type": "t_struct(BPDPool128)8252_storage",
            "src": "contracts\\StakingV2_1.sol:106"
          }
        ],
        "types": {
          "t_struct(Addresses)8234_storage": {
            "label": "struct StakingV2_1.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "subBalances",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IStakingV1)25523": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)8227_storage))": {
            "label": "mapping(address => mapping(uint256 => struct StakingV2_1.Session))"
          },
          "t_mapping(t_uint256,t_struct(Session)8227_storage)": {
            "label": "mapping(uint256 => struct StakingV2_1.Session)"
          },
          "t_struct(Session)8227_storage": {
            "label": "struct StakingV2_1.Session",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "firstPayout",
                "type": "t_uint256"
              },
              {
                "label": "lastPayout",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "payout",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_struct(Payout)8210_storage)dyn_storage": {
            "label": "struct StakingV2_1.Payout[]"
          },
          "t_struct(Payout)8210_storage": {
            "label": "struct StakingV2_1.Payout",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_struct(BPDPool)8243_storage": {
            "label": "struct StakingV2_1.BPDPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint96)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint96)5_storage"
              }
            ]
          },
          "t_array(t_uint96)5_storage": {
            "label": "uint96[5]"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(BPDPool128)8252_storage": {
            "label": "struct StakingV2_1.BPDPool128",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b446f0280fafae5f70f529d70d024c59d001ed9d1a4b62cc8db93a3d4c7e96fc": {
      "address": "0xe50c46c226554E167c2159C47b46081F35f8a488",
      "txHash": "0x620808afe0a5d02fb006af7f71ae3ac4b823a750fcdbf423e0fc48198f85fe45",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)25814_storage",
            "src": "contracts\\stake\\StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)25838_storage",
            "src": "contracts\\stake\\StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)25828_storage",
            "src": "contracts\\stake\\StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)25819_storage",
            "src": "contracts\\stake\\StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\stake\\StakeManager.sol:25"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)26085_storage)",
            "src": "contracts\\stake\\StakeManager.sol:26"
          }
        ],
        "types": {
          "t_struct(Settings)25814_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)25838_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)26419"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)26457"
              },
              {
                "label": "bpd",
                "type": "t_contract(IBpd)26010"
              }
            ]
          },
          "t_contract(IToken)26419": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)26457": {
            "label": "contract IVCAuction"
          },
          "t_contract(IBpd)26010": {
            "label": "contract IBpd"
          },
          "t_struct(StatFields)25828_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)25819_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)26085_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)26085_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)26069"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)26069": {
            "label": "enum StakeStatus",
            "members": [
              "Unknown",
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "451f913f15bed805021375f3d8c7f2279f59372a15cf5713f78a1ec92c1bf065": {
      "address": "0x8317EA932FdaD033F5db3B7dFb26b40aFF8C6633",
      "txHash": "0xce592b0c587a1737242cbc0552b64819894be439c0e1bae0ca5f8376ad6fbfe8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeMinter",
            "label": "settings",
            "type": "t_struct(Settings)30047_storage",
            "src": "contracts\\stake\\StakeMinter.sol:34"
          },
          {
            "contract": "StakeMinter",
            "label": "contracts",
            "type": "t_struct(Contracts)30069_storage",
            "src": "contracts\\stake\\StakeMinter.sol:35"
          }
        ],
        "types": {
          "t_struct(Settings)30047_storage": {
            "label": "struct StakeMinter.Settings",
            "members": [
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)30069_storage": {
            "label": "struct StakeMinter.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)25709"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)25747"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV21)25689"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)25626"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)25598"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)25564"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)25397"
              }
            ]
          },
          "t_contract(IToken)25709": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)25747": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakingV21)25689": {
            "label": "contract IStakingV21"
          },
          "t_contract(IStakingV1)25626": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakeToken)25598": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)25564": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)25397": {
            "label": "contract IStakeCustodian"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a82cf972ccd7aad4a107174e077fae84ade569d78bbdfa1800fd791877c9cbf3": {
      "address": "0x813669478E69fB8591BA1C258c1E540eCD941C84",
      "txHash": "0xd7161dfccddd0cbd58d884956cad76e7441ff065fcd92bf3681cb666280e9b40",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeReminter",
            "label": "contracts",
            "type": "t_struct(Contracts)30611_storage",
            "src": "contracts\\stake\\StakeReminter.sol:23"
          }
        ],
        "types": {
          "t_struct(Contracts)30611_storage": {
            "label": "struct StakeReminter.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)25709"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)25564"
              },
              {
                "label": "stakeBurner",
                "type": "t_contract(IStakeBurner)25367"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)25576"
              }
            ]
          },
          "t_contract(IToken)25709": {
            "label": "contract IToken"
          },
          "t_contract(IStakeManager)25564": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeBurner)25367": {
            "label": "contract IStakeBurner"
          },
          "t_contract(IStakeMinter)25576": {
            "label": "contract IStakeMinter"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2df7c2d3fbb3dcf68e79f6be888348208f1d4a169994afec474c39b146ca5c62": {
      "address": "0x424B0fdE72BDE9480Cdf3184a0A25cd1a0F3F217",
      "txHash": "0x56931e4a84ddfac2b624ac00f396638813aae70495049b8f2f87c1bcd4b4e4ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeUpgrader",
            "label": "settings",
            "type": "t_struct(Settings)31164_storage",
            "src": "contracts\\stake\\StakeUpgrader.sol:31"
          },
          {
            "contract": "StakeUpgrader",
            "label": "contracts",
            "type": "t_struct(Contracts)31180_storage",
            "src": "contracts\\stake\\StakeUpgrader.sol:32"
          }
        ],
        "types": {
          "t_struct(Settings)31164_storage": {
            "label": "struct StakeUpgrader.Settings",
            "members": [
              {
                "label": "maxShareEventActive",
                "type": "t_bool"
              },
              {
                "label": "maxShareMaxDays",
                "type": "t_uint16"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)31180_storage": {
            "label": "struct StakeUpgrader.Contracts",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)25598"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)25564"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)25397"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV21)25689"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)25626"
              }
            ]
          },
          "t_contract(IStakeToken)25598": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)25564": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)25397": {
            "label": "contract IStakeCustodian"
          },
          "t_contract(IStakingV21)25689": {
            "label": "contract IStakingV21"
          },
          "t_contract(IStakingV1)25626": {
            "label": "contract IStakingV1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "96cf82695f204fee928574459b5b42b7af76e5611d08347212ceb3f95c370b18": {
      "address": "0x8aF2de4091140Ee7Ae96fa486dC0fDE0908d2101",
      "txHash": "0x4aec71b9fed45b38705f59a0feda64cf581dc3f8e120313ebd621feeb1a098d9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeBurner",
            "label": "settings",
            "type": "t_struct(Settings)27389_storage",
            "src": "contracts\\stake\\StakeBurner.sol:40"
          },
          {
            "contract": "StakeBurner",
            "label": "contracts",
            "type": "t_struct(Contracts)27414_storage",
            "src": "contracts\\stake\\StakeBurner.sol:41"
          }
        ],
        "types": {
          "t_struct(Settings)27389_storage": {
            "label": "struct StakeBurner.Settings",
            "members": [
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)27414_storage": {
            "label": "struct StakeBurner.Contracts",
            "members": [
              {
                "label": "bpd",
                "type": "t_contract(IBpd)25344"
              },
              {
                "label": "token",
                "type": "t_contract(IToken)25709"
              },
              {
                "label": "auction",
                "type": "t_contract(IAuction)25271"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)25598"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)25564"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)25397"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)25626"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV21)25689"
              }
            ]
          },
          "t_contract(IBpd)25344": {
            "label": "contract IBpd"
          },
          "t_contract(IToken)25709": {
            "label": "contract IToken"
          },
          "t_contract(IAuction)25271": {
            "label": "contract IAuction"
          },
          "t_contract(IStakeToken)25598": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)25564": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)25397": {
            "label": "contract IStakeCustodian"
          },
          "t_contract(IStakingV1)25626": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV21)25689": {
            "label": "contract IStakingV21"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5c46c656c00f84b0b1e48169412edc6e500009e832f5560a5fc2adb2df335720": {
      "address": "0x1E89fc777150ef28ffa7D0375a9C88dEB34FA851",
      "txHash": "0x27007f246806475f0b7447355e0e5f200d70d0594df300345825f99d4f13e7ef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:384"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "contract": "StakeToken",
            "label": "contracts",
            "type": "t_struct(Contracts)31591_storage",
            "src": "contracts\\stake\\StakeToken.sol:30"
          }
        ],
        "types": {
          "t_struct(Contracts)31591_storage": {
            "label": "struct StakeToken.Contracts",
            "members": [
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)26457"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)26230"
              }
            ]
          },
          "t_contract(IVCAuction)26457": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeManager)26230": {
            "label": "contract IStakeManager"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "74cf97fd4669c341943fe7cff47645c0d4cb24d7530a4f97d559808fbd974f37": {
      "address": "0x5855F4552fDE7c4C6085e6B510583D731838A461",
      "txHash": "0x1007a3e087f057c0c1ab7acbdce7d06fbb02903e1ff5f4b49067bba155def6d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)25068_storage)",
            "src": "contracts\\auction\\Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)25035_storage)",
            "src": "contracts\\auction\\Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts\\auction\\Auction.sol:24"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)25040_storage))",
            "src": "contracts\\auction\\Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)25080_storage",
            "src": "contracts\\auction\\Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)25071_storage",
            "src": "contracts\\auction\\Auction.sol:28"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)25053_storage",
            "src": "contracts\\auction\\Auction.sol:29"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)25092_storage)7_storage",
            "src": "contracts\\auction\\Auction.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)25068_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)25068_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)25035_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)25035_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)25040_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)25040_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)25040_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)25080_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)25071_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)25053_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)25306"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)25747"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)25576"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)25306": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)25747": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)25576": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)25092_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)25092_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)25242_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)25068_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)25242_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)25242_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3296172ae8563de7e02cfd0e36f4e36f6438c9c5126c52e56fa4cf53a59972dc": {
      "address": "0xAA13D3B381148424d2bdD7Ac242E1832826B7Fa1",
      "txHash": "0x581dfe8da4853f5716d9a25e43e6f11963944b5bbe15b3cdba1ea23c7d4e6d0f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "AuctionBidder",
            "label": "settings",
            "type": "t_struct(Settings)23543_storage",
            "src": "contracts\\auction\\AuctionBidder.sol:40"
          },
          {
            "contract": "AuctionBidder",
            "label": "addresses",
            "type": "t_struct(Addresses)23558_storage",
            "src": "contracts\\auction\\AuctionBidder.sol:41"
          },
          {
            "contract": "AuctionBidder",
            "label": "contracts",
            "type": "t_struct(Contracts)23553_storage",
            "src": "contracts\\auction\\AuctionBidder.sol:42"
          }
        ],
        "types": {
          "t_struct(Settings)23543_storage": {
            "label": "struct AuctionBidder.Settings",
            "members": [
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Addresses)23558_storage": {
            "label": "struct AuctionBidder.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "stakeManager",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Contracts)23553_storage": {
            "label": "struct AuctionBidder.Contracts",
            "members": [
              {
                "label": "auction",
                "type": "t_contract(IAuction)25271"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)25747"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuction)25271": {
            "label": "contract IAuction"
          },
          "t_contract(IVCAuction)25747": {
            "label": "contract IVCAuction"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "39d92e6f9ce73b14252e884fd4e3290cffdf30bf95fd8f5187410db503b97013": {
      "address": "0x4a38d0F1ece09BE6d43Ae61C9Eae1eAfd6C863BF",
      "txHash": "0xb0229aabe9fb74290222ff137f25623068e5a81cfc06aa3a58a1a3c4100947bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "VCAuction",
            "label": "contracts",
            "type": "t_struct(Contracts)24137_storage",
            "src": "contracts\\auction\\VCAuction.sol:40"
          },
          {
            "contract": "VCAuction",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts\\auction\\VCAuction.sol:41"
          },
          {
            "contract": "VCAuction",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\auction\\VCAuction.sol:43"
          },
          {
            "contract": "VCAuction",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\auction\\VCAuction.sol:44"
          },
          {
            "contract": "VCAuction",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\auction\\VCAuction.sol:45"
          },
          {
            "contract": "VCAuction",
            "label": "originWithdrawableTokenAmounts",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\auction\\VCAuction.sol:46"
          },
          {
            "contract": "VCAuction",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int256))",
            "src": "contracts\\auction\\VCAuction.sol:48"
          }
        ],
        "types": {
          "t_struct(Contracts)24137_storage": {
            "label": "struct VCAuction.Contracts",
            "members": [
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)25626"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV21)25689"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)25564"
              }
            ]
          },
          "t_contract(IStakingV1)25626": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV21)25689": {
            "label": "contract IStakingV21"
          },
          "t_contract(IStakeManager)25564": {
            "label": "contract IStakeManager"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int256))": {
            "label": "mapping(address => mapping(address => int256))"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5e42b078301a736e6c695d1a0f630dc988d364d2cb32d9b96482f431c587f3f7": {
      "address": "0x4Cb2E3A6DFa0a3Fff8f09850357F996cdFE3208c",
      "txHash": "0xb9d116cf258b5d705504bea0885ba62663d5e7b8c0ef0b98adcb30d502b8c4d5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakingV21",
            "label": "addresses",
            "type": "t_struct(Addresses)8756_storage",
            "src": "contracts\\StakingV21.sol:50"
          },
          {
            "contract": "StakingV21",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)26243",
            "src": "contracts\\StakingV21.sol:51"
          },
          {
            "contract": "StakingV21",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:59"
          },
          {
            "contract": "StakingV21",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:60"
          },
          {
            "contract": "StakingV21",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:61"
          },
          {
            "contract": "StakingV21",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:62"
          },
          {
            "contract": "StakingV21",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:63"
          },
          {
            "contract": "StakingV21",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:64"
          },
          {
            "contract": "StakingV21",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:65"
          },
          {
            "contract": "StakingV21",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:66"
          },
          {
            "contract": "StakingV21",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:67"
          },
          {
            "contract": "StakingV21",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)8749_storage))",
            "src": "contracts\\StakingV21.sol:71"
          },
          {
            "contract": "StakingV21",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\StakingV21.sol:73"
          },
          {
            "contract": "StakingV21",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)8732_storage)dyn_storage",
            "src": "contracts\\StakingV21.sol:75"
          },
          {
            "contract": "StakingV21",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\StakingV21.sol:78"
          },
          {
            "contract": "StakingV21",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:80"
          },
          {
            "contract": "StakingV21",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:81"
          },
          {
            "contract": "StakingV21",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\StakingV21.sol:83"
          },
          {
            "contract": "StakingV21",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\StakingV21.sol:85"
          },
          {
            "contract": "StakingV21",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:86"
          },
          {
            "contract": "StakingV21",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:88"
          },
          {
            "contract": "StakingV21",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\StakingV21.sol:90"
          },
          {
            "contract": "StakingV21",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts\\StakingV21.sol:91"
          },
          {
            "contract": "StakingV21",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\StakingV21.sol:94"
          },
          {
            "contract": "StakingV21",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\StakingV21.sol:96"
          },
          {
            "contract": "StakingV21",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\StakingV21.sol:98"
          },
          {
            "contract": "StakingV21",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\StakingV21.sol:100"
          },
          {
            "contract": "StakingV21",
            "label": "bpd",
            "type": "t_struct(BPDPool)8765_storage",
            "src": "contracts\\StakingV21.sol:103"
          },
          {
            "contract": "StakingV21",
            "label": "bpd128",
            "type": "t_struct(BPDPool128)8774_storage",
            "src": "contracts\\StakingV21.sol:104"
          }
        ],
        "types": {
          "t_struct(Addresses)8756_storage": {
            "label": "struct StakingV21.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "subBalances",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IStakingV1)26243": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)8749_storage))": {
            "label": "mapping(address => mapping(uint256 => struct StakingV21.Session))"
          },
          "t_mapping(t_uint256,t_struct(Session)8749_storage)": {
            "label": "mapping(uint256 => struct StakingV21.Session)"
          },
          "t_struct(Session)8749_storage": {
            "label": "struct StakingV21.Session",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "firstPayout",
                "type": "t_uint256"
              },
              {
                "label": "lastPayout",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "payout",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_struct(Payout)8732_storage)dyn_storage": {
            "label": "struct StakingV21.Payout[]"
          },
          "t_struct(Payout)8732_storage": {
            "label": "struct StakingV21.Payout",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_struct(BPDPool)8765_storage": {
            "label": "struct StakingV21.BPDPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint96)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint96)5_storage"
              }
            ]
          },
          "t_array(t_uint96)5_storage": {
            "label": "uint96[5]"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(BPDPool128)8774_storage": {
            "label": "struct StakingV21.BPDPool128",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "04225e536e0b606c804dd29f9496531b77e2fae3e1d116c62c28aeccc35f8530": {
      "address": "0x251A76ef42f862220caFAc99a4c3Fc1b2C8C1613",
      "txHash": "0x8d9798ad1595457370f474ea4ead8cadc090370a65ecf934bca5af9a9618844e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakingV21",
            "label": "addresses",
            "type": "t_struct(Addresses)1773_storage",
            "src": "contracts\\StakingV21.sol:50"
          },
          {
            "contract": "StakingV21",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)2339",
            "src": "contracts\\StakingV21.sol:51"
          },
          {
            "contract": "StakingV21",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:59"
          },
          {
            "contract": "StakingV21",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:60"
          },
          {
            "contract": "StakingV21",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:61"
          },
          {
            "contract": "StakingV21",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:62"
          },
          {
            "contract": "StakingV21",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:63"
          },
          {
            "contract": "StakingV21",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:64"
          },
          {
            "contract": "StakingV21",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:65"
          },
          {
            "contract": "StakingV21",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:66"
          },
          {
            "contract": "StakingV21",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:67"
          },
          {
            "contract": "StakingV21",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)1766_storage))",
            "src": "contracts\\StakingV21.sol:71"
          },
          {
            "contract": "StakingV21",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\StakingV21.sol:73"
          },
          {
            "contract": "StakingV21",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)1749_storage)dyn_storage",
            "src": "contracts\\StakingV21.sol:75"
          },
          {
            "contract": "StakingV21",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\StakingV21.sol:78"
          },
          {
            "contract": "StakingV21",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:80"
          },
          {
            "contract": "StakingV21",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:81"
          },
          {
            "contract": "StakingV21",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\StakingV21.sol:83"
          },
          {
            "contract": "StakingV21",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\StakingV21.sol:85"
          },
          {
            "contract": "StakingV21",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:86"
          },
          {
            "contract": "StakingV21",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:88"
          },
          {
            "contract": "StakingV21",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\StakingV21.sol:90"
          },
          {
            "contract": "StakingV21",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1495_storage",
            "src": "contracts\\StakingV21.sol:91"
          },
          {
            "contract": "StakingV21",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\StakingV21.sol:94"
          },
          {
            "contract": "StakingV21",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\StakingV21.sol:96"
          },
          {
            "contract": "StakingV21",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\StakingV21.sol:98"
          },
          {
            "contract": "StakingV21",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\StakingV21.sol:100"
          },
          {
            "contract": "StakingV21",
            "label": "bpd",
            "type": "t_struct(BPDPool)1782_storage",
            "src": "contracts\\StakingV21.sol:103"
          },
          {
            "contract": "StakingV21",
            "label": "bpd128",
            "type": "t_struct(BPDPool128)1791_storage",
            "src": "contracts\\StakingV21.sol:104"
          }
        ],
        "types": {
          "t_struct(Addresses)1773_storage": {
            "label": "struct StakingV21.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "subBalances",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IStakingV1)2339": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)1766_storage))": {
            "label": "mapping(address => mapping(uint256 => struct StakingV21.Session))"
          },
          "t_mapping(t_uint256,t_struct(Session)1766_storage)": {
            "label": "mapping(uint256 => struct StakingV21.Session)"
          },
          "t_struct(Session)1766_storage": {
            "label": "struct StakingV21.Session",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "firstPayout",
                "type": "t_uint256"
              },
              {
                "label": "lastPayout",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "payout",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_struct(Payout)1749_storage)dyn_storage": {
            "label": "struct StakingV21.Payout[]"
          },
          "t_struct(Payout)1749_storage": {
            "label": "struct StakingV21.Payout",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)1495_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1218_storage"
              }
            ]
          },
          "t_struct(Set)1218_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_struct(BPDPool)1782_storage": {
            "label": "struct StakingV21.BPDPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint96)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint96)5_storage"
              }
            ]
          },
          "t_array(t_uint96)5_storage": {
            "label": "uint96[5]"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(BPDPool128)1791_storage": {
            "label": "struct StakingV21.BPDPool128",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0065c2144c097ee0eee3cc94a9b341a62de7ffefb815604b8dce42233e9bf49d": {
      "address": "0x56CB3Dba831d06492d30aaAa8DDFC6aDa5b96a79",
      "txHash": "0xc6357d7f95a93ae9e449ba41ff502a25de181e6986781cb4ea6907d4408b65ca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakingV21",
            "label": "addresses",
            "type": "t_struct(Addresses)8756_storage",
            "src": "contracts\\StakingV21.sol:50"
          },
          {
            "contract": "StakingV21",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)26335",
            "src": "contracts\\StakingV21.sol:51"
          },
          {
            "contract": "StakingV21",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:59"
          },
          {
            "contract": "StakingV21",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:60"
          },
          {
            "contract": "StakingV21",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:61"
          },
          {
            "contract": "StakingV21",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:62"
          },
          {
            "contract": "StakingV21",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:63"
          },
          {
            "contract": "StakingV21",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:64"
          },
          {
            "contract": "StakingV21",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:65"
          },
          {
            "contract": "StakingV21",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:66"
          },
          {
            "contract": "StakingV21",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:67"
          },
          {
            "contract": "StakingV21",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)8749_storage))",
            "src": "contracts\\StakingV21.sol:71"
          },
          {
            "contract": "StakingV21",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\StakingV21.sol:73"
          },
          {
            "contract": "StakingV21",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)8732_storage)dyn_storage",
            "src": "contracts\\StakingV21.sol:75"
          },
          {
            "contract": "StakingV21",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\StakingV21.sol:78"
          },
          {
            "contract": "StakingV21",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:80"
          },
          {
            "contract": "StakingV21",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:81"
          },
          {
            "contract": "StakingV21",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\StakingV21.sol:83"
          },
          {
            "contract": "StakingV21",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\StakingV21.sol:85"
          },
          {
            "contract": "StakingV21",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:86"
          },
          {
            "contract": "StakingV21",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts\\StakingV21.sol:88"
          },
          {
            "contract": "StakingV21",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\StakingV21.sol:90"
          },
          {
            "contract": "StakingV21",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts\\StakingV21.sol:91"
          },
          {
            "contract": "StakingV21",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\StakingV21.sol:94"
          },
          {
            "contract": "StakingV21",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\StakingV21.sol:96"
          },
          {
            "contract": "StakingV21",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\StakingV21.sol:98"
          },
          {
            "contract": "StakingV21",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\StakingV21.sol:100"
          },
          {
            "contract": "StakingV21",
            "label": "bpd",
            "type": "t_struct(BPDPool)8765_storage",
            "src": "contracts\\StakingV21.sol:103"
          },
          {
            "contract": "StakingV21",
            "label": "bpd128",
            "type": "t_struct(BPDPool128)8774_storage",
            "src": "contracts\\StakingV21.sol:104"
          }
        ],
        "types": {
          "t_struct(Addresses)8756_storage": {
            "label": "struct StakingV21.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "subBalances",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IStakingV1)26335": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)8749_storage))": {
            "label": "mapping(address => mapping(uint256 => struct StakingV21.Session))"
          },
          "t_mapping(t_uint256,t_struct(Session)8749_storage)": {
            "label": "mapping(uint256 => struct StakingV21.Session)"
          },
          "t_struct(Session)8749_storage": {
            "label": "struct StakingV21.Session",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "firstPayout",
                "type": "t_uint256"
              },
              {
                "label": "lastPayout",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "payout",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_struct(Payout)8732_storage)dyn_storage": {
            "label": "struct StakingV21.Payout[]"
          },
          "t_struct(Payout)8732_storage": {
            "label": "struct StakingV21.Payout",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_struct(BPDPool)8765_storage": {
            "label": "struct StakingV21.BPDPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint96)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint96)5_storage"
              }
            ]
          },
          "t_array(t_uint96)5_storage": {
            "label": "uint96[5]"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(BPDPool128)8774_storage": {
            "label": "struct StakingV21.BPDPool128",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "818949e8846f1be1666b14d0efdb3e072f1074046bdc9d893bcb0adb1b575f71": {
      "address": "0x10B99295e90E05b85408269A055f99e2E37D7ABc",
      "txHash": "0x1b97a2aad68c3a8a65ff71395d49c027c6cba1b52ad8c11e80eb09fe4e9ade68",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakingV2",
            "label": "addresses",
            "type": "t_struct(Addresses)18126_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:96"
          },
          {
            "contract": "StakingV2",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)21122",
            "src": "contracts\\archive\\v2\\StakingV2.sol:97"
          },
          {
            "contract": "StakingV2",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:105"
          },
          {
            "contract": "StakingV2",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:106"
          },
          {
            "contract": "StakingV2",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:107"
          },
          {
            "contract": "StakingV2",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:108"
          },
          {
            "contract": "StakingV2",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:109"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:110"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:111"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:112"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:113"
          },
          {
            "contract": "StakingV2",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)18119_storage))",
            "src": "contracts\\archive\\v2\\StakingV2.sol:117"
          },
          {
            "contract": "StakingV2",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:119"
          },
          {
            "contract": "StakingV2",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)18102_storage)dyn_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:121"
          },
          {
            "contract": "StakingV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:124"
          },
          {
            "contract": "StakingV2",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:126"
          },
          {
            "contract": "StakingV2",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:127"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:129"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\archive\\v2\\StakingV2.sol:131"
          },
          {
            "contract": "StakingV2",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:132"
          },
          {
            "contract": "StakingV2",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:134"
          },
          {
            "contract": "StakingV2",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:136"
          },
          {
            "contract": "StakingV2",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:137"
          },
          {
            "contract": "StakingV2",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:140"
          },
          {
            "contract": "StakingV2",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:142"
          },
          {
            "contract": "StakingV2",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\archive\\v2\\StakingV2.sol:144"
          },
          {
            "contract": "StakingV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:146"
          },
          {
            "contract": "StakingV2",
            "label": "bpd",
            "type": "t_struct(BPDPool)18135_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:149"
          },
          {
            "contract": "StakingV2",
            "label": "bpd128",
            "type": "t_struct(BPDPool128)18144_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:150"
          }
        ],
        "types": {
          "t_struct(Addresses)18126_storage": {
            "label": "struct StakingV2.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "subBalances",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IStakingV1)21122": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)18119_storage))": {
            "label": "mapping(address => mapping(uint256 => struct StakingV2.Session))"
          },
          "t_mapping(t_uint256,t_struct(Session)18119_storage)": {
            "label": "mapping(uint256 => struct StakingV2.Session)"
          },
          "t_struct(Session)18119_storage": {
            "label": "struct StakingV2.Session",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "firstPayout",
                "type": "t_uint256"
              },
              {
                "label": "lastPayout",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "payout",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_struct(Payout)18102_storage)dyn_storage": {
            "label": "struct StakingV2.Payout[]"
          },
          "t_struct(Payout)18102_storage": {
            "label": "struct StakingV2.Payout",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_struct(BPDPool)18135_storage": {
            "label": "struct StakingV2.BPDPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint96)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint96)5_storage"
              }
            ]
          },
          "t_array(t_uint96)5_storage": {
            "label": "uint96[5]"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(BPDPool128)18144_storage": {
            "label": "struct StakingV2.BPDPool128",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8578ff79e69b44a75bca3b8363a785a6a360c72017696af7b6b076b886865731": {
      "address": "0x5D9C1Db5E8C835b0c23B2858Eaf241141A2379C0",
      "txHash": "0x7a1348e0f4eede845b5227e2093c88f74c28ab3196877e85a6f25d469a3046da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakingV2",
            "label": "addresses",
            "type": "t_struct(Addresses)1922_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:96"
          },
          {
            "contract": "StakingV2",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)4535",
            "src": "contracts\\archive\\v2\\StakingV2.sol:97"
          },
          {
            "contract": "StakingV2",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:105"
          },
          {
            "contract": "StakingV2",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:106"
          },
          {
            "contract": "StakingV2",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:107"
          },
          {
            "contract": "StakingV2",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:108"
          },
          {
            "contract": "StakingV2",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:109"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:110"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:111"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:112"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:113"
          },
          {
            "contract": "StakingV2",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)1915_storage))",
            "src": "contracts\\archive\\v2\\StakingV2.sol:117"
          },
          {
            "contract": "StakingV2",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:119"
          },
          {
            "contract": "StakingV2",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)1898_storage)dyn_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:121"
          },
          {
            "contract": "StakingV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:124"
          },
          {
            "contract": "StakingV2",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:126"
          },
          {
            "contract": "StakingV2",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:127"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:129"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\archive\\v2\\StakingV2.sol:131"
          },
          {
            "contract": "StakingV2",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:132"
          },
          {
            "contract": "StakingV2",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:134"
          },
          {
            "contract": "StakingV2",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:136"
          },
          {
            "contract": "StakingV2",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1495_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:137"
          },
          {
            "contract": "StakingV2",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:140"
          },
          {
            "contract": "StakingV2",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:142"
          },
          {
            "contract": "StakingV2",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\archive\\v2\\StakingV2.sol:144"
          },
          {
            "contract": "StakingV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:146"
          },
          {
            "contract": "StakingV2",
            "label": "bpd",
            "type": "t_struct(BPDPool)1931_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:149"
          },
          {
            "contract": "StakingV2",
            "label": "bpd128",
            "type": "t_struct(BPDPool128)1940_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:150"
          }
        ],
        "types": {
          "t_struct(Addresses)1922_storage": {
            "label": "struct StakingV2.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "subBalances",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IStakingV1)4535": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)1915_storage))": {
            "label": "mapping(address => mapping(uint256 => struct StakingV2.Session))"
          },
          "t_mapping(t_uint256,t_struct(Session)1915_storage)": {
            "label": "mapping(uint256 => struct StakingV2.Session)"
          },
          "t_struct(Session)1915_storage": {
            "label": "struct StakingV2.Session",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "firstPayout",
                "type": "t_uint256"
              },
              {
                "label": "lastPayout",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "payout",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_struct(Payout)1898_storage)dyn_storage": {
            "label": "struct StakingV2.Payout[]"
          },
          "t_struct(Payout)1898_storage": {
            "label": "struct StakingV2.Payout",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)1495_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1218_storage"
              }
            ]
          },
          "t_struct(Set)1218_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_struct(BPDPool)1931_storage": {
            "label": "struct StakingV2.BPDPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint96)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint96)5_storage"
              }
            ]
          },
          "t_array(t_uint96)5_storage": {
            "label": "uint96[5]"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(BPDPool128)1940_storage": {
            "label": "struct StakingV2.BPDPool128",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "61e3eb4ced35c2f148564a8251c9a4dc8d0de16dbdd889ac86d8cb5e4db2f721": {
      "address": "0xa26a424ce3E62C7D84d2948cACa1C2DeA5a287F9",
      "txHash": "0xc34e66348bc5b8c4e1a7029eb7e9ff8cf1314281bf8192ee5f732fb599ec6318",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakingV2",
            "label": "addresses",
            "type": "t_struct(Addresses)1844_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:96"
          },
          {
            "contract": "StakingV2",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)4926",
            "src": "contracts\\archive\\v2\\StakingV2.sol:97"
          },
          {
            "contract": "StakingV2",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:105"
          },
          {
            "contract": "StakingV2",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:106"
          },
          {
            "contract": "StakingV2",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:107"
          },
          {
            "contract": "StakingV2",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:108"
          },
          {
            "contract": "StakingV2",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:109"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:110"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:111"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:112"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:113"
          },
          {
            "contract": "StakingV2",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)1837_storage))",
            "src": "contracts\\archive\\v2\\StakingV2.sol:117"
          },
          {
            "contract": "StakingV2",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:119"
          },
          {
            "contract": "StakingV2",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)1820_storage)dyn_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:121"
          },
          {
            "contract": "StakingV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:124"
          },
          {
            "contract": "StakingV2",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:126"
          },
          {
            "contract": "StakingV2",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:127"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:129"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\archive\\v2\\StakingV2.sol:131"
          },
          {
            "contract": "StakingV2",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:132"
          },
          {
            "contract": "StakingV2",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts\\archive\\v2\\StakingV2.sol:134"
          },
          {
            "contract": "StakingV2",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:136"
          },
          {
            "contract": "StakingV2",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1495_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:137"
          },
          {
            "contract": "StakingV2",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:140"
          },
          {
            "contract": "StakingV2",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\archive\\v2\\StakingV2.sol:142"
          },
          {
            "contract": "StakingV2",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\archive\\v2\\StakingV2.sol:144"
          },
          {
            "contract": "StakingV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\archive\\v2\\StakingV2.sol:146"
          },
          {
            "contract": "StakingV2",
            "label": "bpd",
            "type": "t_struct(BPDPool)1853_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:149"
          },
          {
            "contract": "StakingV2",
            "label": "bpd128",
            "type": "t_struct(BPDPool128)1862_storage",
            "src": "contracts\\archive\\v2\\StakingV2.sol:150"
          }
        ],
        "types": {
          "t_struct(Addresses)1844_storage": {
            "label": "struct StakingV2.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "subBalances",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IStakingV1)4926": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)1837_storage))": {
            "label": "mapping(address => mapping(uint256 => struct StakingV2.Session))"
          },
          "t_mapping(t_uint256,t_struct(Session)1837_storage)": {
            "label": "mapping(uint256 => struct StakingV2.Session)"
          },
          "t_struct(Session)1837_storage": {
            "label": "struct StakingV2.Session",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "firstPayout",
                "type": "t_uint256"
              },
              {
                "label": "lastPayout",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "payout",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_struct(Payout)1820_storage)dyn_storage": {
            "label": "struct StakingV2.Payout[]"
          },
          "t_struct(Payout)1820_storage": {
            "label": "struct StakingV2.Payout",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)1495_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1218_storage"
              }
            ]
          },
          "t_struct(Set)1218_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_struct(BPDPool)1853_storage": {
            "label": "struct StakingV2.BPDPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint96)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint96)5_storage"
              }
            ]
          },
          "t_array(t_uint96)5_storage": {
            "label": "uint96[5]"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(BPDPool128)1862_storage": {
            "label": "struct StakingV2.BPDPool128",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3ad3b58848ef89799a62d3850352c1595c880a18537b615dca60480399e761c7": {
      "address": "0x1cCb35f240F3CD919801d0dF77009a34B826D6c1",
      "txHash": "0xe80eb4e1a22f16325b3882bb5d0b24c24290c2f4000cb71ec41bcc967074a651",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)25672_storage)",
            "src": "contracts\\auction\\Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)25639_storage)",
            "src": "contracts\\auction\\Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts\\auction\\Auction.sol:24"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)25644_storage))",
            "src": "contracts\\auction\\Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)25684_storage",
            "src": "contracts\\auction\\Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)25675_storage",
            "src": "contracts\\auction\\Auction.sol:28"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)25657_storage",
            "src": "contracts\\auction\\Auction.sol:29"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)25696_storage)7_storage",
            "src": "contracts\\auction\\Auction.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)25672_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)25672_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)25639_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)25639_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)25644_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)25644_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)25644_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)25684_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)25675_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)25657_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)25972"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)26457"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)26242"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)25972": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)26457": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)26242": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)25696_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)25696_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)25846_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)25672_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)25846_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)25846_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "351227653be21bea1c411c5167202038fe5d4a3061a0b263e3595453b4addbb5": {
      "address": "0xa33cE09eD258B7cfD941d6e2edE79C6f99eDaCe6",
      "txHash": "0xa2e307839aefdcc81b992b3f7a81c309d85ed8d177fb951363128b60bb12efd2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)25814_storage",
            "src": "contracts\\stake\\StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)25838_storage",
            "src": "contracts\\stake\\StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)25828_storage",
            "src": "contracts\\stake\\StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)25819_storage",
            "src": "contracts\\stake\\StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\stake\\StakeManager.sol:25"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)26085_storage)",
            "src": "contracts\\stake\\StakeManager.sol:26"
          }
        ],
        "types": {
          "t_struct(Settings)25814_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)25838_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)26419"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)26457"
              },
              {
                "label": "bpd",
                "type": "t_contract(IBpd)26010"
              }
            ]
          },
          "t_contract(IToken)26419": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)26457": {
            "label": "contract IVCAuction"
          },
          "t_contract(IBpd)26010": {
            "label": "contract IBpd"
          },
          "t_struct(StatFields)25828_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)25819_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)26085_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)26085_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)26069"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)26069": {
            "label": "enum StakeStatus",
            "members": [
              "Unknown",
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e2403f545130b0cac1c9c2c8e8935cdbe9aaf1d3453792a5b2200acf3dd4b81d": {
      "address": "0x8723A6E9A660B3184B4C8afEb8E0d35169F8d0ff",
      "txHash": "0xe0b6b988ed5355a2f61108847f49ce8494b370d48e93c33bfb9e60b4168b02f2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)25814_storage",
            "src": "contracts\\stake\\StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)25838_storage",
            "src": "contracts\\stake\\StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)25828_storage",
            "src": "contracts\\stake\\StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)25819_storage",
            "src": "contracts\\stake\\StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\stake\\StakeManager.sol:25"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)26085_storage)",
            "src": "contracts\\stake\\StakeManager.sol:26"
          }
        ],
        "types": {
          "t_struct(Settings)25814_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)25838_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)26435"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)26473"
              },
              {
                "label": "bpd",
                "type": "t_contract(IBpd)26010"
              }
            ]
          },
          "t_contract(IToken)26435": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)26473": {
            "label": "contract IVCAuction"
          },
          "t_contract(IBpd)26010": {
            "label": "contract IBpd"
          },
          "t_struct(StatFields)25828_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)25819_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)26085_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)26085_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)26069"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)26069": {
            "label": "enum StakeStatus",
            "members": [
              "Unknown",
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4d7eb84e1058ee02c7572baeb783ea2db8afb7fbaacc0f008a608f6659ee35a4": {
      "address": "0x64A90A982c9a123Fb2C3575863A73FF7579a6be1",
      "txHash": "0xb6edaafc918d4e8383d9af84a061f947aedfb1c74c03f38cf22a60139b7d2e77",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "StakeUpgrader",
            "label": "settings",
            "type": "t_struct(Settings)31906_storage",
            "src": "contracts\\stake\\StakeUpgrader.sol:31"
          },
          {
            "contract": "StakeUpgrader",
            "label": "contracts",
            "type": "t_struct(Contracts)31922_storage",
            "src": "contracts\\stake\\StakeUpgrader.sol:32"
          }
        ],
        "types": {
          "t_struct(Settings)31906_storage": {
            "label": "struct StakeUpgrader.Settings",
            "members": [
              {
                "label": "maxShareEventActive",
                "type": "t_bool"
              },
              {
                "label": "maxShareMaxDays",
                "type": "t_uint16"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)31922_storage": {
            "label": "struct StakeUpgrader.Contracts",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)26280"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)26246"
              },
              {
                "label": "stakeCustodian",
                "type": "t_contract(IStakeCustodian)26063"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV21)26415"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)26352"
              }
            ]
          },
          "t_contract(IStakeToken)26280": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)26246": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeCustodian)26063": {
            "label": "contract IStakeCustodian"
          },
          "t_contract(IStakingV21)26415": {
            "label": "contract IStakingV21"
          },
          "t_contract(IStakingV1)26352": {
            "label": "contract IStakingV1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a0da73465c82e065cec0346d2412ef87c3016489ba19ec58e9cbd6f9f4133966": {
      "address": "0xEC30F130a5F170DF1A0CE81B8c82DD69cB37d18e",
      "txHash": "0xad315e7ed41b082ff9d3bcc791bb36be4a46d569f28f51903b07ce21a196bcb9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\abstracts\\Pausable.sol:19"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:384"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "contract": "StakeToken",
            "label": "contracts",
            "type": "t_struct(Contracts)31613_storage",
            "src": "contracts\\stake\\StakeToken.sol:30"
          }
        ],
        "types": {
          "t_struct(Contracts)31613_storage": {
            "label": "struct StakeToken.Contracts",
            "members": [
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)26473"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)26246"
              }
            ]
          },
          "t_contract(IVCAuction)26473": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeManager)26246": {
            "label": "contract IStakeManager"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0a369c178a5a03a4f401b4019d099804225eb623cc5ae88938b322c4ea4396f6": {
      "address": "0x41Be5FA8cEAcd36Ea6EFdA173290D36a84749F0b",
      "txHash": "0x1de98c0a8a6a3f55b081858beed33a2d3fc2d55ffb53a18f11f98555df641f9e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "VCAuction",
            "label": "contracts",
            "type": "t_struct(Contracts)25805_storage",
            "src": "contracts\\auction\\VCAuction.sol:40"
          },
          {
            "contract": "VCAuction",
            "label": "divTokens",
            "type": "t_struct(AddressSet)4084_storage",
            "src": "contracts\\auction\\VCAuction.sol:41"
          },
          {
            "contract": "VCAuction",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\auction\\VCAuction.sol:43"
          },
          {
            "contract": "VCAuction",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\auction\\VCAuction.sol:44"
          },
          {
            "contract": "VCAuction",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\auction\\VCAuction.sol:45"
          },
          {
            "contract": "VCAuction",
            "label": "originWithdrawableTokenAmounts",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\auction\\VCAuction.sol:46"
          },
          {
            "contract": "VCAuction",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int256))",
            "src": "contracts\\auction\\VCAuction.sol:48"
          }
        ],
        "types": {
          "t_struct(Contracts)25805_storage": {
            "label": "struct VCAuction.Contracts",
            "members": [
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)27427"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV21)27490"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)27321"
              }
            ]
          },
          "t_contract(IStakingV1)27427": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV21)27490": {
            "label": "contract IStakingV21"
          },
          "t_contract(IStakeManager)27321": {
            "label": "contract IStakeManager"
          },
          "t_struct(AddressSet)4084_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3807_storage"
              }
            ]
          },
          "t_struct(Set)3807_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int256))": {
            "label": "mapping(address => mapping(address => int256))"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "13416c514d3d7051e35046722d1fa255f7ba036b0afe8024bfef828686c4492d": {
      "address": "0x42e9558a444177599f10f80ea537Fe236744Ae9B",
      "txHash": "0x3dec48b3cac8bd814514048c175dc5f0b883b6127f98f1a544acdc7ad52aad7e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)26749_storage)",
            "src": "contracts/auction/Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)26716_storage)",
            "src": "contracts/auction/Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4211_storage)",
            "src": "contracts/auction/Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)26721_storage))",
            "src": "contracts/auction/Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)26761_storage",
            "src": "contracts/auction/Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)26752_storage",
            "src": "contracts/auction/Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)26734_storage",
            "src": "contracts/auction/Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)26773_storage)7_storage",
            "src": "contracts/auction/Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)26749_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)26749_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)26716_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)26716_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4211_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4211_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3807_storage"
              }
            ]
          },
          "t_struct(Set)3807_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)26721_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)26721_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)26721_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)26761_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)26752_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)26734_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)27049"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)27550"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)27335"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8317"
              }
            ]
          },
          "t_contract(IAuctionV2)27049": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)27550": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)27335": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8317": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)26773_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)26773_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)26923_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)26749_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)26923_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)26923_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "52298c5b4d3ed5948166461766ec7613bf137d55f9a5b71cd012c58c69d950a5": {
      "address": "0x34dbB6Ad1f662DDcA6d7235408448a6CE5F4356C",
      "txHash": "0x402a86ba5460707742171b9785162b6215e021b2e6d1c02a22f97b5b7ea7c061",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)26757_storage)",
            "src": "contracts/auction/Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)26724_storage)",
            "src": "contracts/auction/Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4211_storage)",
            "src": "contracts/auction/Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)26729_storage))",
            "src": "contracts/auction/Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)26769_storage",
            "src": "contracts/auction/Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)26760_storage",
            "src": "contracts/auction/Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)26742_storage",
            "src": "contracts/auction/Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)26781_storage)7_storage",
            "src": "contracts/auction/Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)26757_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)26757_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)26724_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)26724_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4211_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4211_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3807_storage"
              }
            ]
          },
          "t_struct(Set)3807_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)26729_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)26729_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)26729_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)26769_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)26760_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)26742_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)27057"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)27558"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)27343"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8317"
              }
            ]
          },
          "t_contract(IAuctionV2)27057": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)27558": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)27343": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8317": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)26781_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)26781_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)26931_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)26757_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)26931_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)26931_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "84418394f3ef08c13959b640af3229816cf3929d4c5b705f892463cbda8919ae": {
      "address": "0x5D58fb75FA29463fFC29815cDE22f14C10A7DDf8",
      "txHash": "0x9f48550b4c0612682b31dd9fa4dd533ace49badee24d91918980cbb7d87a3244",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)26747_storage)",
            "src": "contracts\\auction\\Auction.sol:20"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)26714_storage)",
            "src": "contracts\\auction\\Auction.sol:21"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4211_storage)",
            "src": "contracts\\auction\\Auction.sol:22"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)26719_storage))",
            "src": "contracts\\auction\\Auction.sol:23"
          },
          {
            "contract": "Auction",
            "label": "settings",
            "type": "t_struct(Settings)26759_storage",
            "src": "contracts\\auction\\Auction.sol:25"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)26750_storage",
            "src": "contracts\\auction\\Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)26732_storage",
            "src": "contracts\\auction\\Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)26771_storage)7_storage",
            "src": "contracts\\auction\\Auction.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)26747_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)26747_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)26714_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)26714_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4211_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4211_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3807_storage"
              }
            ]
          },
          "t_struct(Set)3807_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)26719_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)26719_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)26719_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Settings)26759_storage": {
            "label": "struct AuctionBase.Settings",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)26750_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)26732_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)27047"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)27548"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)27333"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8317"
              }
            ]
          },
          "t_contract(IAuctionV2)27047": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)27548": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)27333": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8317": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)26771_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)26771_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)26921_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)26747_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)26921_storage)dyn_storage": {
            "label": "struct VentureToken[]"
          },
          "t_struct(VentureToken)26921_storage": {
            "label": "struct VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b0d118c69bf1b3a5764c87ff490346755e6d35eef68214c40aa29e8c4c085d24": {
      "address": "0x116442005f5d6ce5a72CEB1C3837b6F38467E14C",
      "txHash": "0x01fbab8d4825b21d9a644ad074827731fffd6e7eae7345dde6bd285125cd4d2f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "settings",
            "type": "t_struct(Settings)26889_storage",
            "src": "contracts\\stake\\StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)26913_storage",
            "src": "contracts\\stake\\StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)26903_storage",
            "src": "contracts\\stake\\StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)26894_storage",
            "src": "contracts\\stake\\StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\stake\\StakeManager.sol:25"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)27160_storage)",
            "src": "contracts\\stake\\StakeManager.sol:26"
          }
        ],
        "types": {
          "t_struct(Settings)26889_storage": {
            "label": "struct StakeBase.Settings",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)26913_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)27510"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)27548"
              },
              {
                "label": "bpd",
                "type": "t_contract(IBpd)27085"
              }
            ]
          },
          "t_contract(IToken)27510": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)27548": {
            "label": "contract IVCAuction"
          },
          "t_contract(IBpd)27085": {
            "label": "contract IBpd"
          },
          "t_struct(StatFields)26903_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)26894_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)27160_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)27160_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)27144"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)27144": {
            "label": "enum StakeStatus",
            "members": [
              "Unknown",
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7d64237fbf25ebd4dff5b8213dd82867a326d441eb78aeff63665545ce6def50": {
      "address": "0xd1fCcABfFC7d7729a40da4969E41aFFD42207eb2",
      "txHash": "0xc421235ce402930cadeee20d7b2cba12ce0fc9fe3bc98323b0c56798551dee39",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "VCAuction",
            "label": "contracts",
            "type": "t_struct(Contracts)25805_storage",
            "src": "contracts\\auction\\VCAuction.sol:40"
          },
          {
            "contract": "VCAuction",
            "label": "divTokens",
            "type": "t_struct(AddressSet)4084_storage",
            "src": "contracts\\auction\\VCAuction.sol:41"
          },
          {
            "contract": "VCAuction",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\auction\\VCAuction.sol:43"
          },
          {
            "contract": "VCAuction",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\auction\\VCAuction.sol:44"
          },
          {
            "contract": "VCAuction",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\auction\\VCAuction.sol:45"
          },
          {
            "contract": "VCAuction",
            "label": "originWithdrawableTokenAmounts",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\auction\\VCAuction.sol:46"
          },
          {
            "contract": "VCAuction",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int256))",
            "src": "contracts\\auction\\VCAuction.sol:48"
          }
        ],
        "types": {
          "t_struct(Contracts)25805_storage": {
            "label": "struct VCAuction.Contracts",
            "members": [
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)27456"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV21)27519"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)27350"
              }
            ]
          },
          "t_contract(IStakingV1)27456": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV21)27519": {
            "label": "contract IStakingV21"
          },
          "t_contract(IStakeManager)27350": {
            "label": "contract IStakeManager"
          },
          "t_struct(AddressSet)4084_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3807_storage"
              }
            ]
          },
          "t_struct(Set)3807_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int256))": {
            "label": "mapping(address => mapping(address => int256))"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xcdA2733D4f451529BB5C74dB3EcD3CE85764B45D",
    "txHash": "0xb79125b687d92b40e3610c6db107de5844351ba7c779bfb4436b4fdbe0eea5d9"
  }
}
