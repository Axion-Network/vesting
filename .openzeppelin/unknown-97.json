{
  "manifestVersion": "3.1",
  "impls": {
    "1b15c17bf8674701e8a426212d427302b594112fdbb83d91ea3491f0aa37e63b": {
      "address": "0x791CB5Fdb8988d3aF4693686B80415309a525063",
      "txHash": "0x969784c215f48ae877917145c26476a456ae60d9d58d52da36a9398e3c7706dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "AuctionV2",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)16550_storage)",
            "src": "contracts/archive/v2/AuctionV2.sol:78"
          },
          {
            "contract": "AuctionV2",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/archive/v2/AuctionV2.sol:79"
          },
          {
            "contract": "AuctionV2",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)16557_storage))",
            "src": "contracts/archive/v2/AuctionV2.sol:80"
          },
          {
            "contract": "AuctionV2",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/archive/v2/AuctionV2.sol:81"
          },
          {
            "contract": "AuctionV2",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionV2.sol:84"
          },
          {
            "contract": "AuctionV2",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionV2.sol:85"
          },
          {
            "contract": "AuctionV2",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionV2.sol:86"
          },
          {
            "contract": "AuctionV2",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionV2.sol:87"
          },
          {
            "contract": "AuctionV2",
            "label": "options",
            "type": "t_struct(Options)16579_storage",
            "src": "contracts/archive/v2/AuctionV2.sol:89"
          },
          {
            "contract": "AuctionV2",
            "label": "addresses",
            "type": "t_struct(Addresses)16566_storage",
            "src": "contracts/archive/v2/AuctionV2.sol:90"
          },
          {
            "contract": "AuctionV2",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)23384",
            "src": "contracts/archive/v2/AuctionV2.sol:91"
          },
          {
            "contract": "AuctionV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/archive/v2/AuctionV2.sol:93"
          },
          {
            "contract": "AuctionV2",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/archive/v2/AuctionV2.sol:95"
          },
          {
            "contract": "AuctionV2",
            "label": "middlePriceDays",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionV2.sol:97"
          },
          {
            "contract": "AuctionV2",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)16659_storage)7_storage",
            "src": "contracts/archive/v2/AuctionV2.sol:109"
          },
          {
            "contract": "AuctionV2",
            "label": "ventureAutoStakeDays",
            "type": "t_uint8",
            "src": "contracts/archive/v2/AuctionV2.sol:110"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)16550_storage)": {
            "label": "mapping(uint256 => struct AuctionV2.AuctionReserves)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AuctionReserves)16550_storage": {
            "label": "struct AuctionV2.AuctionReserves",
            "members": [
              {
                "label": "eth",
                "type": "t_uint256"
              },
              {
                "label": "token",
                "type": "t_uint256"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint256"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)16557_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionV2.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)16557_storage)": {
            "label": "mapping(address => struct AuctionV2.UserBid)"
          },
          "t_struct(UserBid)16557_storage": {
            "label": "struct AuctionV2.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint256"
              },
              {
                "label": "ref",
                "type": "t_address"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(Options)16579_storage": {
            "label": "struct AuctionV2.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint256"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint256"
              },
              {
                "label": "referredPercent",
                "type": "t_uint256"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              },
              {
                "label": "discountPercent",
                "type": "t_uint256"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(Addresses)16566_storage": {
            "label": "struct AuctionV2.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "staking",
                "type": "t_address"
              },
              {
                "label": "uniswap",
                "type": "t_address_payable"
              },
              {
                "label": "recipient",
                "type": "t_address_payable"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_contract(IAuctionV1)23384": {
            "label": "contract IAuctionV1"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(AuctionData)16659_storage)7_storage": {
            "label": "struct AuctionV2.AuctionData[7]"
          },
          "t_struct(AuctionData)16659_storage": {
            "label": "struct AuctionV2.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)16652_storage)dyn_storage"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_struct(VentureToken)16652_storage)dyn_storage": {
            "label": "struct AuctionV2.VentureToken[]"
          },
          "t_struct(VentureToken)16652_storage": {
            "label": "struct AuctionV2.VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8538c878904aca2c6e4236a92a6f39db8ade79e002afe4219c5f040c792c51a6": {
      "address": "0xbE3563DbdA8DfEd1a8dEC89e724dC2A1cC18327A",
      "txHash": "0x688d47628993fb2cd5e697d9b601478265ea23ba2e488b107b68e6d925f2de63",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "TokenV2",
            "label": "swapToken",
            "type": "t_contract(IERC20)5077",
            "src": "contracts/archive/v2/TokenV2.sol:24"
          },
          {
            "contract": "TokenV2",
            "label": "swapIsOver",
            "type": "t_bool",
            "src": "contracts/archive/v2/TokenV2.sol:25"
          },
          {
            "contract": "TokenV2",
            "label": "swapTokenBalance",
            "type": "t_uint256",
            "src": "contracts/archive/v2/TokenV2.sol:26"
          },
          {
            "contract": "TokenV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/archive/v2/TokenV2.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)5077": {
            "label": "contract IERC20"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "30acefa1a95ff6bf55e8373bd63f6df9f553b2c97b975e802bd74e04321883b5": {
      "address": "0x7797b4921fEea2f158f60808e2F2109c743dB351",
      "txHash": "0x56f3392af3463056fc307c7ec8e97d6a67d890e22e0b12390d7a321fb7e2f030",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "NativeSwapV2",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/archive/v2/NativeSwapV2.sol:29"
          },
          {
            "contract": "NativeSwapV2",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/archive/v2/NativeSwapV2.sol:30"
          },
          {
            "contract": "NativeSwapV2",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/archive/v2/NativeSwapV2.sol:31"
          },
          {
            "contract": "NativeSwapV2",
            "label": "swapToken",
            "type": "t_contract(IERC20)5077",
            "src": "contracts/archive/v2/NativeSwapV2.sol:33"
          },
          {
            "contract": "NativeSwapV2",
            "label": "mainToken",
            "type": "t_contract(ITokenV2)23526",
            "src": "contracts/archive/v2/NativeSwapV2.sol:34"
          },
          {
            "contract": "NativeSwapV2",
            "label": "auction",
            "type": "t_contract(IAuctionV2)23406",
            "src": "contracts/archive/v2/NativeSwapV2.sol:35"
          },
          {
            "contract": "NativeSwapV2",
            "label": "swapTokenBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/archive/v2/NativeSwapV2.sol:37"
          },
          {
            "contract": "NativeSwapV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/archive/v2/NativeSwapV2.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20)5077": {
            "label": "contract IERC20"
          },
          "t_contract(ITokenV2)23526": {
            "label": "contract ITokenV2"
          },
          "t_contract(IAuctionV2)23406": {
            "label": "contract IAuctionV2"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5b357b7d35888d063240c823fcdfde9acc369c09f9a008fcdef4ad7d79f5436b": {
      "address": "0x32d9C69712963F64D50ffd49D74dae2280779b52",
      "txHash": "0xcc791256b8bbb40a0bcbe7a37870884cc33d3c2f9ff54ca5f118fd92550125a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakingV2",
            "label": "addresses",
            "type": "t_struct(Addresses)19581_storage",
            "src": "contracts/archive/v2/StakingV2.sol:96"
          },
          {
            "contract": "StakingV2",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)22768",
            "src": "contracts/archive/v2/StakingV2.sol:97"
          },
          {
            "contract": "StakingV2",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:105"
          },
          {
            "contract": "StakingV2",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:106"
          },
          {
            "contract": "StakingV2",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:107"
          },
          {
            "contract": "StakingV2",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:108"
          },
          {
            "contract": "StakingV2",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:109"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:110"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:111"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:112"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:113"
          },
          {
            "contract": "StakingV2",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)19574_storage))",
            "src": "contracts/archive/v2/StakingV2.sol:117"
          },
          {
            "contract": "StakingV2",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/archive/v2/StakingV2.sol:119"
          },
          {
            "contract": "StakingV2",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)19557_storage)dyn_storage",
            "src": "contracts/archive/v2/StakingV2.sol:121"
          },
          {
            "contract": "StakingV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/archive/v2/StakingV2.sol:124"
          },
          {
            "contract": "StakingV2",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:126"
          },
          {
            "contract": "StakingV2",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:127"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts/archive/v2/StakingV2.sol:129"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts/archive/v2/StakingV2.sol:131"
          },
          {
            "contract": "StakingV2",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:132"
          },
          {
            "contract": "StakingV2",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:134"
          },
          {
            "contract": "StakingV2",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/archive/v2/StakingV2.sol:136"
          },
          {
            "contract": "StakingV2",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts/archive/v2/StakingV2.sol:137"
          },
          {
            "contract": "StakingV2",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/archive/v2/StakingV2.sol:140"
          },
          {
            "contract": "StakingV2",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/archive/v2/StakingV2.sol:142"
          },
          {
            "contract": "StakingV2",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/archive/v2/StakingV2.sol:144"
          },
          {
            "contract": "StakingV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/archive/v2/StakingV2.sol:146"
          },
          {
            "contract": "StakingV2",
            "label": "bpd",
            "type": "t_struct(BPDPool)19590_storage",
            "src": "contracts/archive/v2/StakingV2.sol:149"
          },
          {
            "contract": "StakingV2",
            "label": "bpd128",
            "type": "t_struct(BPDPool128)19599_storage",
            "src": "contracts/archive/v2/StakingV2.sol:150"
          }
        ],
        "types": {
          "t_struct(Addresses)19581_storage": {
            "label": "struct StakingV2.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "subBalances",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IStakingV1)22768": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)19574_storage))": {
            "label": "mapping(address => mapping(uint256 => struct StakingV2.Session))"
          },
          "t_mapping(t_uint256,t_struct(Session)19574_storage)": {
            "label": "mapping(uint256 => struct StakingV2.Session)"
          },
          "t_struct(Session)19574_storage": {
            "label": "struct StakingV2.Session",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "firstPayout",
                "type": "t_uint256"
              },
              {
                "label": "lastPayout",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "payout",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_struct(Payout)19557_storage)dyn_storage": {
            "label": "struct StakingV2.Payout[]"
          },
          "t_struct(Payout)19557_storage": {
            "label": "struct StakingV2.Payout",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_struct(BPDPool)19590_storage": {
            "label": "struct StakingV2.BPDPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint96)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint96)5_storage"
              }
            ]
          },
          "t_array(t_uint96)5_storage": {
            "label": "uint96[5]"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(BPDPool128)19599_storage": {
            "label": "struct StakingV2.BPDPool128",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3c11ec3895023005cebea5275b9684829b1accce420af6c337b838ceb8072c77": {
      "address": "0x1AC57b7C2bF39C94969E725183259219CD05b9d8",
      "txHash": "0xb4a1198694f4948ee0fb530a759deaa95f3e99ba414ed84af9a1d51a89d4708e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakingV2",
            "label": "addresses",
            "type": "t_struct(Addresses)19581_storage",
            "src": "contracts/archive/v2/StakingV2.sol:96"
          },
          {
            "contract": "StakingV2",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)22768",
            "src": "contracts/archive/v2/StakingV2.sol:97"
          },
          {
            "contract": "StakingV2",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:105"
          },
          {
            "contract": "StakingV2",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:106"
          },
          {
            "contract": "StakingV2",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:107"
          },
          {
            "contract": "StakingV2",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:108"
          },
          {
            "contract": "StakingV2",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:109"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:110"
          },
          {
            "contract": "StakingV2",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:111"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:112"
          },
          {
            "contract": "StakingV2",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:113"
          },
          {
            "contract": "StakingV2",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)19574_storage))",
            "src": "contracts/archive/v2/StakingV2.sol:117"
          },
          {
            "contract": "StakingV2",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/archive/v2/StakingV2.sol:119"
          },
          {
            "contract": "StakingV2",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)19557_storage)dyn_storage",
            "src": "contracts/archive/v2/StakingV2.sol:121"
          },
          {
            "contract": "StakingV2",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/archive/v2/StakingV2.sol:124"
          },
          {
            "contract": "StakingV2",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:126"
          },
          {
            "contract": "StakingV2",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:127"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts/archive/v2/StakingV2.sol:129"
          },
          {
            "contract": "StakingV2",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts/archive/v2/StakingV2.sol:131"
          },
          {
            "contract": "StakingV2",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:132"
          },
          {
            "contract": "StakingV2",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts/archive/v2/StakingV2.sol:134"
          },
          {
            "contract": "StakingV2",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/archive/v2/StakingV2.sol:136"
          },
          {
            "contract": "StakingV2",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts/archive/v2/StakingV2.sol:137"
          },
          {
            "contract": "StakingV2",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/archive/v2/StakingV2.sol:140"
          },
          {
            "contract": "StakingV2",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/archive/v2/StakingV2.sol:142"
          },
          {
            "contract": "StakingV2",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/archive/v2/StakingV2.sol:144"
          },
          {
            "contract": "StakingV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/archive/v2/StakingV2.sol:146"
          },
          {
            "contract": "StakingV2",
            "label": "bpd",
            "type": "t_struct(BPDPool)19590_storage",
            "src": "contracts/archive/v2/StakingV2.sol:149"
          },
          {
            "contract": "StakingV2",
            "label": "bpd128",
            "type": "t_struct(BPDPool128)19599_storage",
            "src": "contracts/archive/v2/StakingV2.sol:150"
          }
        ],
        "types": {
          "t_struct(Addresses)19581_storage": {
            "label": "struct StakingV2.Addresses",
            "members": [
              {
                "label": "mainToken",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "subBalances",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IStakingV1)22768": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)19574_storage))": {
            "label": "mapping(address => mapping(uint256 => struct StakingV2.Session))"
          },
          "t_mapping(t_uint256,t_struct(Session)19574_storage)": {
            "label": "mapping(uint256 => struct StakingV2.Session)"
          },
          "t_struct(Session)19574_storage": {
            "label": "struct StakingV2.Session",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "firstPayout",
                "type": "t_uint256"
              },
              {
                "label": "lastPayout",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "payout",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_struct(Payout)19557_storage)dyn_storage": {
            "label": "struct StakingV2.Payout[]"
          },
          "t_struct(Payout)19557_storage": {
            "label": "struct StakingV2.Payout",
            "members": [
              {
                "label": "payout",
                "type": "t_uint256"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_struct(BPDPool)19590_storage": {
            "label": "struct StakingV2.BPDPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint96)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint96)5_storage"
              }
            ]
          },
          "t_array(t_uint96)5_storage": {
            "label": "uint96[5]"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(BPDPool128)19599_storage": {
            "label": "struct StakingV2.BPDPool128",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6d742b5f68bae8d5febd92fc10c3ba070a7c7c0fcae700f2a6354b2c79323c61": {
      "address": "0x08372f6F35D0d9fc8F62113342f03FbaAfED75F8",
      "txHash": "0x52224d90082ab49b176183733e3f6cf04a60e45a7b384a6eb5c639cb6f7eb63e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "AuctionManagerV2",
            "label": "mintedBPD",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionManagerV2.sol:44"
          },
          {
            "contract": "AuctionManagerV2",
            "label": "mintedAuction",
            "type": "t_uint256",
            "src": "contracts/archive/v2/AuctionManagerV2.sol:45"
          },
          {
            "contract": "AuctionManagerV2",
            "label": "addresses",
            "type": "t_struct(Addresses)16294_storage",
            "src": "contracts/archive/v2/AuctionManagerV2.sol:46"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Addresses)16294_storage": {
            "label": "struct AuctionManagerV2.Addresses",
            "members": [
              {
                "label": "axion",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "bpd",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eecfa1c12ba7f206a43db06c2005562ee0edeb9f8fc462661ff02d7b5d8b34bf": {
      "address": "0x893EeEa5c5E3eD0D2B134711Fb6Cd3EdB7D5D2aA",
      "txHash": "0xf7ef2458bc19e6aec75f46504e961def23373a24f1239cc58dcd6db9fdfc70a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "DataReaderV2",
            "label": "staking",
            "type": "t_contract(IStakingDataV2)22740",
            "src": "contracts/archive/v2/DataReaderV2.sol:41"
          },
          {
            "contract": "DataReaderV2",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)22768",
            "src": "contracts/archive/v2/DataReaderV2.sol:42"
          },
          {
            "contract": "DataReaderV2",
            "label": "auction",
            "type": "t_contract(IAuctionDataV2)22649",
            "src": "contracts/archive/v2/DataReaderV2.sol:43"
          },
          {
            "contract": "DataReaderV2",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)22674",
            "src": "contracts/archive/v2/DataReaderV2.sol:44"
          }
        ],
        "types": {
          "t_contract(IStakingDataV2)22740": {
            "label": "contract IStakingDataV2"
          },
          "t_contract(IStakingV1)22768": {
            "label": "contract IStakingV1"
          },
          "t_contract(IAuctionDataV2)22649": {
            "label": "contract IAuctionDataV2"
          },
          "t_contract(IAuctionV1)22674": {
            "label": "contract IAuctionV1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0cf4ad7bf2c47c4c24056cdf9d81c0679e5b0f0271d708355b9b049685f82be1": {
      "address": "0x999FF0409422a6b80188889A865E6B1188AB15b6",
      "txHash": "0x5a8603241720993d9fee53b69510fa907ba65f0b14d5d97995076d3300466f1e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "StakeManager",
            "label": "bpd",
            "type": "t_struct(BpdPool)23823_storage",
            "src": "contracts/stake/StakeManager.sol:20"
          },
          {
            "contract": "StakeManager",
            "label": "config",
            "type": "t_struct(Config)23793_storage",
            "src": "contracts/stake/StakeManager.sol:21"
          },
          {
            "contract": "StakeManager",
            "label": "contracts",
            "type": "t_struct(Contracts)23814_storage",
            "src": "contracts/stake/StakeManager.sol:22"
          },
          {
            "contract": "StakeManager",
            "label": "statFields",
            "type": "t_struct(StatFields)23807_storage",
            "src": "contracts/stake/StakeManager.sol:23"
          },
          {
            "contract": "StakeManager",
            "label": "interestFields",
            "type": "t_struct(InterestFields)23798_storage",
            "src": "contracts/stake/StakeManager.sol:24"
          },
          {
            "contract": "StakeManager",
            "label": "interestPerShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/stake/StakeManager.sol:26"
          },
          {
            "contract": "StakeManager",
            "label": "stakeData",
            "type": "t_mapping(t_uint256,t_struct(StakeData)23925_storage)",
            "src": "contracts/stake/StakeManager.sol:28"
          }
        ],
        "types": {
          "t_struct(BpdPool)23823_storage": {
            "label": "struct StakeBase.BpdPool",
            "members": [
              {
                "label": "pool",
                "type": "t_array(t_uint128)5_storage"
              },
              {
                "label": "shares",
                "type": "t_array(t_uint128)5_storage"
              }
            ]
          },
          "t_array(t_uint128)5_storage": {
            "label": "uint128[5]"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Config)23793_storage": {
            "label": "struct StakeBase.Config",
            "members": [
              {
                "label": "shareRateScalingFactor",
                "type": "t_uint128"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "bpdDayRange",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Contracts)23814_storage": {
            "label": "struct StakeBase.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24191"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24229"
              }
            ]
          },
          "t_contract(IToken)24191": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24229": {
            "label": "contract IVCAuction"
          },
          "t_struct(StatFields)23807_storage": {
            "label": "struct StakeBase.StatFields",
            "members": [
              {
                "label": "totalStakedAmount",
                "type": "t_uint72"
              },
              {
                "label": "sharesTotalSupply",
                "type": "t_uint72"
              },
              {
                "label": "totalVcaRegisteredShares",
                "type": "t_uint72"
              },
              {
                "label": "lastStakeId",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint72": {
            "label": "uint72"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(InterestFields)23798_storage": {
            "label": "struct StakeBase.InterestFields",
            "members": [
              {
                "label": "shareRate",
                "type": "t_uint128"
              },
              {
                "label": "nextAddInterestTimestamp",
                "type": "t_uint128"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(StakeData)23925_storage)": {
            "label": "mapping(uint256 => struct StakeData)"
          },
          "t_struct(StakeData)23925_storage": {
            "label": "struct StakeData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "shares",
                "type": "t_uint64"
              },
              {
                "label": "start",
                "type": "t_uint40"
              },
              {
                "label": "stakingDays",
                "type": "t_uint16"
              },
              {
                "label": "firstInterestDay",
                "type": "t_uint24"
              },
              {
                "label": "payout",
                "type": "t_uint40"
              },
              {
                "label": "status",
                "type": "t_enum(StakeStatus)23909"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_enum(StakeStatus)23909": {
            "label": "enum StakeStatus",
            "members": [
              "Withdrawn",
              "Active"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8bf5030910d6e870208ecd9aa7a0ff81d38625ede29aa0ba3c32eb61087e5de3": {
      "address": "0x7c474CAe4df46Ad528258Da146bBDc88a272F404",
      "txHash": "0xa3e27227b9d9b4b7c969796582eb8da5c9d8e85f14426064a9611a4efe146680",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/abstracts/Pausable.sol:19"
          },
          {
            "contract": "StakeMinter",
            "label": "settings",
            "type": "t_struct(Settings)28262_storage",
            "src": "contracts/stake/StakeMinter.sol:32"
          },
          {
            "contract": "StakeMinter",
            "label": "contracts",
            "type": "t_struct(Contracts)28281_storage",
            "src": "contracts/stake/StakeMinter.sol:33"
          }
        ],
        "types": {
          "t_struct(Settings)28262_storage": {
            "label": "struct StakeMinter.Settings",
            "members": [
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)28281_storage": {
            "label": "struct StakeMinter.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24191"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24229"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24171"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24108"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24080"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24041"
              }
            ]
          },
          "t_contract(IToken)24191": {
            "label": "contract IToken"
          },
          "t_contract(IVCAuction)24229": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakingV2)24171": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakingV1)24108": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakeToken)24080": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24041": {
            "label": "contract IStakeManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7d1ef9a0e9e131db9a875d940f6c1077a773ca50ae3207dce5bd5e56d43a24aa": {
      "address": "0xf8e4e9A3FE3eA1C1dfF4d36D3111BB5313aD5FE0",
      "txHash": "0x694d99accdaf74477f97063f308df09ed483a60bc6c45c9155be10aac31e3423",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/abstracts/Pausable.sol:19"
          },
          {
            "contract": "StakeReminter",
            "label": "contracts",
            "type": "t_struct(Contracts)28747_storage",
            "src": "contracts/stake/StakeReminter.sol:25"
          }
        ],
        "types": {
          "t_struct(Contracts)28747_storage": {
            "label": "struct StakeReminter.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24191"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24041"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24080"
              },
              {
                "label": "stakeBurner",
                "type": "t_contract(IStakeBurner)23904"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24053"
              }
            ]
          },
          "t_contract(IToken)24191": {
            "label": "contract IToken"
          },
          "t_contract(IStakeManager)24041": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakeToken)24080": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeBurner)23904": {
            "label": "contract IStakeBurner"
          },
          "t_contract(IStakeMinter)24053": {
            "label": "contract IStakeMinter"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "74556cdcdc4fc638fdca08eb04697186dd9df2c533248c1ddd638b2317546b46": {
      "address": "0x7b56389124Fc01421D7eD9A5658ee80464EB2a70",
      "txHash": "0x4b2c724d8ca7cfd86509231213a46bea59abbb296d3973c5123390381dd15945",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/abstracts/Pausable.sol:19"
          },
          {
            "contract": "StakeUpgrader",
            "label": "settings",
            "type": "t_struct(Settings)29304_storage",
            "src": "contracts/stake/StakeUpgrader.sol:29"
          },
          {
            "contract": "StakeUpgrader",
            "label": "contracts",
            "type": "t_struct(Contracts)29317_storage",
            "src": "contracts/stake/StakeUpgrader.sol:30"
          }
        ],
        "types": {
          "t_struct(Settings)29304_storage": {
            "label": "struct StakeUpgrader.Settings",
            "members": [
              {
                "label": "maxShareEventActive",
                "type": "t_bool"
              },
              {
                "label": "maxShareMaxDays",
                "type": "t_uint16"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)29317_storage": {
            "label": "struct StakeUpgrader.Contracts",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24080"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24041"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24171"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24108"
              }
            ]
          },
          "t_contract(IStakeToken)24080": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24041": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakingV2)24171": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakingV1)24108": {
            "label": "contract IStakingV1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6a617763e9376bb227bf5715185be69982b4728268ad13386eb7e26e6077156a": {
      "address": "0x5e6aeF15b5874BC48C4Fa2496F1981dbf91dA13b",
      "txHash": "0x4168c40c2e9ecc884197983a6da04c35b05a61a33079ee0de7b1c3c223b9a647",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/abstracts/Pausable.sol:19"
          },
          {
            "contract": "StakeBurner",
            "label": "settings",
            "type": "t_struct(Settings)25453_storage",
            "src": "contracts/stake/StakeBurner.sol:35"
          },
          {
            "contract": "StakeBurner",
            "label": "contracts",
            "type": "t_struct(Contracts)25472_storage",
            "src": "contracts/stake/StakeBurner.sol:36"
          }
        ],
        "types": {
          "t_struct(Settings)25453_storage": {
            "label": "struct StakeBurner.Settings",
            "members": [
              {
                "label": "secondsInDay",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV2",
                "type": "t_uint32"
              },
              {
                "label": "lastSessionIdV1",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Contracts)25472_storage": {
            "label": "struct StakeBurner.Contracts",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IToken)24191"
              },
              {
                "label": "auction",
                "type": "t_contract(IAuction)23832"
              },
              {
                "label": "stakeToken",
                "type": "t_contract(IStakeToken)24080"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24041"
              },
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24108"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24171"
              }
            ]
          },
          "t_contract(IToken)24191": {
            "label": "contract IToken"
          },
          "t_contract(IAuction)23832": {
            "label": "contract IAuction"
          },
          "t_contract(IStakeToken)24080": {
            "label": "contract IStakeToken"
          },
          "t_contract(IStakeManager)24041": {
            "label": "contract IStakeManager"
          },
          "t_contract(IStakingV1)24108": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV2)24171": {
            "label": "contract IStakingV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "15eea60ff49fdd2680182fb20ee315c710cbd017b90965bf68f6a2aa48801393": {
      "address": "0x8B090c25fEa56C132C658Bb91Cc3b620a198b2fA",
      "txHash": "0x2d3f9c5df1dbadba1c0e878f22cf19400710d01f872fee7031391825410818d3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Pausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/abstracts/Pausable.sol:19"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:384"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "contract": "StakeToken",
            "label": "contracts",
            "type": "t_struct(Contracts)29007_storage",
            "src": "contracts/stake/StakeToken.sol:30"
          }
        ],
        "types": {
          "t_struct(Contracts)29007_storage": {
            "label": "struct StakeToken.Contracts",
            "members": [
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24229"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24041"
              }
            ]
          },
          "t_contract(IVCAuction)24229": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeManager)24041": {
            "label": "contract IStakeManager"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1ffcf91063d16a3233968292dc99bc4cbac38c029eeed26efc2ea63f4dae8266": {
      "address": "0x05034e2A26B05E4673826ea9C03642E990a9584e",
      "txHash": "0x1743686a245aaf958e8b265444003395918d96d4b6069589c9ce334bf4f78827",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "Auction",
            "label": "optionsOf",
            "type": "t_mapping(t_uint256,t_struct(Options)23652_storage)",
            "src": "contracts/Auction.sol:26"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)23612_storage)",
            "src": "contracts/Auction.sol:27"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_struct(UintSet)4075_storage)",
            "src": "contracts/Auction.sol:28"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)23617_storage))",
            "src": "contracts/Auction.sol:29"
          },
          {
            "contract": "Auction",
            "label": "config",
            "type": "t_struct(Config)23661_storage",
            "src": "contracts/Auction.sol:31"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)23635_storage",
            "src": "contracts/Auction.sol:32"
          },
          {
            "contract": "Auction",
            "label": "contracts",
            "type": "t_struct(Contracts)23630_storage",
            "src": "contracts/Auction.sol:33"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)23678_storage)7_storage",
            "src": "contracts/Auction.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Options)23652_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.Options)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)23652_storage": {
            "label": "struct AuctionBase.Options",
            "members": [
              {
                "label": "autoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "ventureAutoStakeDays",
                "type": "t_uint16"
              },
              {
                "label": "referrerPercent",
                "type": "t_uint8"
              },
              {
                "label": "referredPercent",
                "type": "t_uint8"
              },
              {
                "label": "discountPercent",
                "type": "t_uint8"
              },
              {
                "label": "premiumPercent",
                "type": "t_uint8"
              },
              {
                "label": "middlePriceDays",
                "type": "t_uint8"
              },
              {
                "label": "referralsOn",
                "type": "t_bool"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(AuctionReserves)23612_storage)": {
            "label": "mapping(uint256 => struct AuctionBase.AuctionReserves)"
          },
          "t_struct(AuctionReserves)23612_storage": {
            "label": "struct AuctionBase.AuctionReserves",
            "members": [
              {
                "label": "filled",
                "type": "t_bool"
              },
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "eth",
                "type": "t_uint48"
              },
              {
                "label": "token",
                "type": "t_uint64"
              },
              {
                "label": "uniswapLastPrice",
                "type": "t_uint64"
              },
              {
                "label": "uniswapMiddlePrice",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(UintSet)4075_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)4075_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)23617_storage))": {
            "label": "mapping(uint256 => mapping(address => struct AuctionBase.UserBid))"
          },
          "t_mapping(t_address,t_struct(UserBid)23617_storage)": {
            "label": "mapping(address => struct AuctionBase.UserBid)"
          },
          "t_struct(UserBid)23617_storage": {
            "label": "struct AuctionBase.UserBid",
            "members": [
              {
                "label": "eth",
                "type": "t_uint96"
              },
              {
                "label": "ref",
                "type": "t_address"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_struct(Config)23661_storage": {
            "label": "struct AuctionBase.Config",
            "members": [
              {
                "label": "lastAuctionId",
                "type": "t_uint64"
              },
              {
                "label": "lastAuctionIdV2",
                "type": "t_uint64"
              },
              {
                "label": "contractStartTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "secondsInDay",
                "type": "t_uint64"
              }
            ]
          },
          "t_struct(Addresses)23635_storage": {
            "label": "struct AuctionBase.Addresses",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "stakeManager",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Contracts)23630_storage": {
            "label": "struct AuctionBase.Contracts",
            "members": [
              {
                "label": "auctionV2",
                "type": "t_contract(IAuctionV2)23881"
              },
              {
                "label": "vcAuction",
                "type": "t_contract(IVCAuction)24229"
              },
              {
                "label": "stakeMinter",
                "type": "t_contract(IStakeMinter)24053"
              },
              {
                "label": "uniswapRouter",
                "type": "t_contract(IUniswapV2Router02)8181"
              }
            ]
          },
          "t_contract(IAuctionV2)23881": {
            "label": "contract IAuctionV2"
          },
          "t_contract(IVCAuction)24229": {
            "label": "contract IVCAuction"
          },
          "t_contract(IStakeMinter)24053": {
            "label": "contract IStakeMinter"
          },
          "t_contract(IUniswapV2Router02)8181": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_struct(AuctionData)23678_storage)7_storage": {
            "label": "struct AuctionBase.AuctionData[7]"
          },
          "t_struct(AuctionData)23678_storage": {
            "label": "struct AuctionBase.AuctionData",
            "members": [
              {
                "label": "mode",
                "type": "t_uint8"
              },
              {
                "label": "amountToFillBy",
                "type": "t_uint128"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(VentureToken)23666_storage)dyn_storage"
              },
              {
                "label": "options",
                "type": "t_struct(Options)23652_storage"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_struct(VentureToken)23666_storage)dyn_storage": {
            "label": "struct AuctionBase.VentureToken[]"
          },
          "t_struct(VentureToken)23666_storage": {
            "label": "struct AuctionBase.VentureToken",
            "members": [
              {
                "label": "coin",
                "type": "t_address"
              },
              {
                "label": "percentage",
                "type": "t_uint96"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "50908cd79de8f689335556760b437ace8404c0021a31ffaf15a59c8700b2838e": {
      "address": "0x8338bEb6368fB06AC44B876d3e67Ee3c63688B7b",
      "txHash": "0xa858fb5b9842996b8011b614b474e984f5d40b308092d035c836c15ad3421436",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "VCAuction",
            "label": "contracts",
            "type": "t_struct(Contracts)10298_storage",
            "src": "contracts/VCAuction.sol:40"
          },
          {
            "contract": "VCAuction",
            "label": "divTokens",
            "type": "t_struct(AddressSet)3948_storage",
            "src": "contracts/VCAuction.sol:41"
          },
          {
            "contract": "VCAuction",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/VCAuction.sol:43"
          },
          {
            "contract": "VCAuction",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VCAuction.sol:44"
          },
          {
            "contract": "VCAuction",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VCAuction.sol:45"
          },
          {
            "contract": "VCAuction",
            "label": "originWithdrawableTokenAmounts",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VCAuction.sol:46"
          },
          {
            "contract": "VCAuction",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int256))",
            "src": "contracts/VCAuction.sol:48"
          }
        ],
        "types": {
          "t_struct(Contracts)10298_storage": {
            "label": "struct VCAuction.Contracts",
            "members": [
              {
                "label": "stakingV1",
                "type": "t_contract(IStakingV1)24108"
              },
              {
                "label": "stakingV2",
                "type": "t_contract(IStakingV2)24171"
              },
              {
                "label": "stakeManager",
                "type": "t_contract(IStakeManager)24041"
              }
            ]
          },
          "t_contract(IStakingV1)24108": {
            "label": "contract IStakingV1"
          },
          "t_contract(IStakingV2)24171": {
            "label": "contract IStakingV2"
          },
          "t_contract(IStakeManager)24041": {
            "label": "contract IStakeManager"
          },
          "t_struct(AddressSet)3948_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3671_storage"
              }
            ]
          },
          "t_struct(Set)3671_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int256))": {
            "label": "mapping(address => mapping(address => int256))"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x16394D5154A27187b62DEEB2d3CBa62921000a5a",
    "txHash": "0xdea70f1671dc2ae48d1f94393f7d5e0d6499b8bc9fa3a67decf78d0dfdf9c6c2"
  }
}
